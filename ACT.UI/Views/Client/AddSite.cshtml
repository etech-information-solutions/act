@model SiteViewModel

@using ACT.Data.Models;
@using ACT.Core.Enums;
@using ACT.Core.Models;
@using ACT.UI.Models;
@using ACT.Core.Models.Custom;
@using ACT.Core.Services;

@{
    /**/

    if (ViewBag.IncludeLayout == null)
    {
        Layout = null;
    }

    ViewBag.Title = "Add Site";

    //List<Region> regionOptions = ViewBag.RegionOptions;
    //List<Region> regionOptions = Model.RegionOptions;
    //regionOptions = Model.RegionOptions.Where(r => r.PSPId == pspId).ToList();
}


@Html.Partial("_Notification")

@using (Html.BeginForm("AddSite", "Client", FormMethod.Post, new { enctype = "multipart/form-data", @data_ajax_form = "1", @data_target = "#managesites", @class = "custom-validate", @style = "width: auto;" }))
{
<div id="edit-item">

    <h2 class="uppercase" style="width: auto;">
        <img alt="" src="@Url.Content("~/images/edit.png")" />
        <span>Add Site</span>
    </h2>

    @Html.ValidationSummary(true)

    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.SiteType)

    <div class="left" style="width: 45%; margin-right: 1%;">

        <div class="display-label">
            Name
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Name, new { @class = "input", @placeholder = "Enter Site Name" })
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="display-label">
            DescriptionZ
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Description, new { @class = "input", @placeholder = "Enter Site Description" })
            @Html.ValidationMessageFor(model => model.Description)
        </div>
        <div class="display-label">
            @*Site Type*@
            Region
        </div>
        <div class="editor-field">
            @*@Html.DropDownListFor(model => model.RegionId, model => model.RegionOptions, region => region.Id, region => region.Name, true, new { @class = "chzn", @style = "width: 98%;" })*@
            @Html.DropDownList("RegionOptions", "Please Select")
            @*@Html.ValidationMessageFor(model => model.RegionId)*@
        </div>
        <div class="display-label">
            Account Code
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.AccountCode, new { @class = "input", @placeholder = "Enter Account Code" })
            @Html.ValidationMessageFor(model => model.AccountCode)
            @*@Html.DisplayFor( model => model.UserRoles.FirstOrDefault().Role.Name )*@
        </div>

        <div class="display-label">
            Planning Point
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.PlanningPoint, new { @class = "input", @placeholder = "Enter Planning Point" })
            @Html.ValidationMessageFor(model => model.PlanningPoint)
        </div>

        <div class="display-label">
            Depot
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Depot, new { @class = "input", @placeholder = "Enter Depot" })
            @Html.ValidationMessageFor(model => model.Depot)
        </div>

        <div class="display-label">
            Chep SiteCode
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.SiteCodeChep, new { @class = "input", @placeholder = "EnterChep Site Code" })
            @Html.ValidationMessageFor(model => model.SiteCodeChep)
        </div>

    </div>

    <div class="left" style="width: 45%;">
        <h3>Contact Details</h3>
        <div class="display-label">
            Contact Number
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.ContactNo, new { @class = "input", @placeholder = "Enter Contact Number" })
            @Html.ValidationMessageFor(model => model.ContactNo)
        </div>


        <div class="display-label">
            Contact Person
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.ContactName, new { @class = "input", @placeholder = "Enter Contact Name" })
            @Html.ValidationMessageFor(model => model.ContactName)
        </div>
        <h3>Contact Details</h3>
        <div class="display-label">
            X Coordinates
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.XCord, new { @class = "input", @placeholder = "Enter X Coordinates" })
            @Html.ValidationMessageFor(model => model.XCord)
        </div>


        <div class="display-label">
            Y Coordinates
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.YCord, new { @class = "input", @placeholder = "Enter Y Coordinates" })
            @Html.ValidationMessageFor(model => model.YCord)
        </div>

    </div>
    <div class="clear" style="border-bottom: 1px dashed #ccc; margin-bottom: 10px; height: 20px;">&nbsp;</div>


    <div class="left" style="width: 48%; margin-right: 4%;">

        <input id="Address.AddressType" name="Address.AddressType" type="hidden" value="@( ( int ) AddressType.Postal )" />

        <div class="editor-label">
            @Html.LabelFor(model => model.FullAddress.AddressLine1)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.FullAddress.AddressLine1, new { @class = "input", @placeholder = "Enter Site Address Line 1" })
            @Html.ValidationMessageFor(model => model.FullAddress.AddressLine1)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FullAddress.Town)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.FullAddress.Town, new { @class = "input", @placeholder = "Enter Site Address Town" })
            @Html.ValidationMessageFor(model => model.FullAddress.Town)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FullAddress.PostCode)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.FullAddress.PostCode, new { @class = "input", @placeholder = "Enter Site Address Postal Code" })
            @Html.ValidationMessageFor(model => model.FullAddress.PostCode)
        </div>


    </div>

    <div class="left" style="width: 48%;">
        <div class="editor-label">
            @Html.LabelFor(model => model.FullAddress.AddressLine2)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.FullAddress.AddressLine2, new { @class = "input", @placeholder = "Enter Site Address Line 2" })
            @Html.ValidationMessageFor(model => model.FullAddress.AddressLine2)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FullAddress.Province)
        </div>
        <div class="editor-field">

            <select id="Address.Province" name="Address.Province" class="chzn" required="required" style="width: 100%;">
                <option value="">-- select</option>
                @foreach (int p in Enum.GetValues(typeof(Province)))
                {
                    string text = ((Province)p).GetDisplayText();

                    if (text.ToLower() == "all")
                    {
                        continue;
                    }

                    <option value="@p">@text</option>
                }
            </select>

            @Html.ValidationMessageFor(model => model.FullAddress.Province)
        </div>

    </div>


    <div class="clear" style="border-bottom: 1px dashed #ccc; margin-bottom: 20px;">&nbsp;</div>

    <p>
        <input id="save-btn" type="submit" value="Save" />

        <span style="padding: 0 5px;">/</span>

        <a data-refresh="1" data-target="#managesites">Cancel</a>
    </p>
    <div class="clear" style="border-bottom: 1px dashed #ccc; margin-bottom: 10px; height: 0;">&nbsp;</div>
</div>
}