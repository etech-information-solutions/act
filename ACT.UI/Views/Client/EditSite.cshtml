@model SiteViewModel

@using ACT.Core.Enums;
@using ACT.Data.Models;
@using ACT.UI.Models;

@{
    /**/

    if (ViewBag.IncludeLayout == null)
    {
        Layout = null;
    }

    ViewBag.Title = "Edit Site";
    Address address = ViewBag.Address;
}


@Html.Partial("_Notification")

@using (Html.BeginForm("EditSite", "Client", FormMethod.Post, new { enctype = "multipart/form-data", @data_ajax_form = "1", @data_target = "#clientlist", @class = "custom-validate", @style = "width: auto;" }))
{
    <div id="edit-item">

        <h2 class="uppercase" style="width: auto;">
            <img alt="" src="@Url.Content("~/images/edit.png")" />
            <span>Edit Site</span>
        </h2>

        @Html.ValidationSummary(true)

        @Html.HiddenFor(model => model.Id)

        <div class="left" style="width: 45%; margin-right: 1%;">

            <div class="display-label">
                Name
            </div>
            <div class="display-field">
                @Html.TextBoxFor(model => model.Name, new { @class = "input", @placeholder = "Enter Site Name" })
                @Html.ValidationMessageFor(model => model.Name)
            </div>

            <div class="display-label">
                Description
            </div>
            <div class="display-field">
                @Html.TextBoxFor(model => model.Description, new { @class = "input", @placeholder = "Enter Site Description" })
                @Html.ValidationMessageFor(model => model.Description)
            </div>
            <div class="display-label">
                Site Type
            </div>
            <div class="display-field">
                @*@Html.TextBoxFor(model => model.SiteType, new { @class = "input", @placeholder = "Enter Site Ty[pe" })
                    @Html.ValidationMessageFor(model => model.SiteType)*@
                @*@(( ( Site ) Model.Status ).GetDisplayText())*@
            </div>
            <div class="display-label">
                Account Code
            </div>
            <div class="display-field">
                @Html.TextBoxFor(model => model.AccountCode, new { @class = "input", @placeholder = "Enter Account Code" })
                @Html.ValidationMessageFor(model => model.AccountCode)
                @*@Html.DisplayFor( model => model.UserRoles.FirstOrDefault().Role.Name )*@
            </div>

            <div class="display-label">
                Planning Point
            </div>
            <div class="display-field">
                @Html.TextBoxFor(model => model.PlanningPoint, new { @class = "input", @placeholder = "Enter Planning Point" })
                @Html.ValidationMessageFor(model => model.PlanningPoint)
            </div>

            <div class="display-label">
                Depot
            </div>
            <div class="display-field">
                @Html.TextBoxFor(model => model.Depot, new { @class = "input", @placeholder = "Enter Depot" })
                @Html.ValidationMessageFor(model => model.Depot)
            </div>

            <div class="display-label">
                Chep SiteCode
            </div>
            <div class="display-field">
                @Html.TextBoxFor(model => model.SiteCodeChep, new { @class = "input", @placeholder = "EnterChep Site Code" })
                @Html.ValidationMessageFor(model => model.SiteCodeChep)
            </div>

        </div>

        <div class="left" style="width: 45%;">
            <h3>Contact Details</h3>
            <div class="display-label">
                Contact Number
            </div>
            <div class="display-field">
                @Html.TextBoxFor(model => model.ContactNo, new { @class = "input", @placeholder = "Enter Contact Number" })
                @Html.ValidationMessageFor(model => model.ContactNo)
            </div>


            <div class="display-label">
                Contact Person
            </div>
            <div class="display-field">
                @Html.TextBoxFor(model => model.ContactName, new { @class = "input", @placeholder = "Enter Contact Name" })
                @Html.ValidationMessageFor(model => model.ContactName)
            </div>
            <h3>Contact Details</h3>
            <div class="display-label">
                X Coordinates
            </div>
            <div class="display-field">
                @Html.TextBoxFor(model => model.XCord, new { @class = "input", @placeholder = "Enter X Coordinates" })
                @Html.ValidationMessageFor(model => model.XCord)
            </div>


            <div class="display-label">
                Y Coordinates
            </div>
            <div class="display-field">
                @Html.TextBoxFor(model => model.YCord, new { @class = "input", @placeholder = "Enter Y Coordinates" })
                @Html.ValidationMessageFor(model => model.YCord)
            </div>

        </div>
        <div class="clear" style="border-bottom: 1px dashed #ccc; margin-bottom: 10px; height: 20px;">&nbsp;</div>


        <div class="left" style="width: 48%; margin-right: 4%;">

            @Html.HiddenFor(model => model.FullAddress.Id)
            @Html.HiddenFor(model => model.FullAddress.AddressType)

            <div class="editor-label">
                @Html.LabelFor(model => model.FullAddress.AddressLine1)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.FullAddress.AddressLine1, new { @class = "input", @placeholder = "Enter Site Address Line 1" })
                @Html.ValidationMessageFor(model => model.FullAddress.AddressLine1)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.FullAddress.Town)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.FullAddress.Town, new { @class = "input", @placeholder = "Enter Site Address Town" })
                @Html.ValidationMessageFor(model => model.FullAddress.Town)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.FullAddress.PostCode)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.FullAddress.PostCode, new { @class = "input", @placeholder = "Enter Site Address Postal Code" })
                @Html.ValidationMessageFor(model => model.FullAddress.PostCode)
            </div>


        </div>

        <div class="left" style="width: 48%;">
            <div class="editor-label">
                @Html.LabelFor(model => model.FullAddress.AddressLine2)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.FullAddress.AddressLine2, new { @class = "input", @placeholder = "Enter Site Address Line 2" })
                @Html.ValidationMessageFor(model => model.FullAddress.AddressLine2)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.FullAddress.Province)
            </div>
            <div class="editor-field">

                <select id="Address.Province" name="Address.Province" class="chzn" required="required" style="width: 100%;">
                    <option value="">-- select</option>
                    @foreach (int p in Enum.GetValues(typeof(Province)))
                    {
                        Province province = (Province)p;

                        string text = province.GetDisplayText();

                        if (text.ToLower() == "all")
                        {
                            continue;
                        }

                        string sel = (province == Model.FullAddress.Province) ? "selected=selected" : string.Empty;

                        <option value="@p" @sel>@text</option>
                    }
                </select>

                @Html.ValidationMessageFor(model => model.FullAddress.Province)
            </div>

        </div>
    </div>

    <div class="clear" style="border-bottom: 1px dashed #ccc; margin-bottom: 20px;">&nbsp;</div>

    <p>
        <input id="save-btn" type="submit" value="Update" />
        <span style="padding: 0 5px;">/</span> <a data-cancel="1" data-target="#edit-item" data-remove="tr.edit">Cancel</a>
    </p>
}