@model ClientViewModel

@using ACT.Core.Enums;
@using ACT.Core.Models;
@using ACT.UI.Models;

@{
    if ( ViewBag.IncludeLayout == null )
    {
        Layout = null;
    }

    ViewBag.Title = "Edit Client";

    UserModel user = User.Get();

    string logoUrl = ( Model.Files.NullableAny( d => d.Name.ToLower() == "logo" ) ) ? $"/Client/ViewDocument/{Model.Files.FirstOrDefault( d => d.Name.ToLower() == "logo" ).Id}" : Url.Content( "~/Images/no-preview.png" );
}


@Html.Partial( "_Notification" )

@using ( Html.BeginForm( "EditClient", "Client", FormMethod.Post, new { enctype = "multipart/form-data", @data_ajax_form = "1", @data_target = "#clients", @class = "custom-validate", @style = "width: auto;", id = "editclient" } ) )
{
    <div id="edit-item">

        <h2 class="uppercase" style="width: auto;">
            <img alt="" src="@Url.Content("~/images/edit.png")" />
            <span>Edit Client</span>
        </h2>

        @Html.ValidationSummary( true )

        @Html.HiddenFor( model => model.Id )

        <div class="left" style="width: 31%; margin-right: 3%;">

            <div class="editor-field" style="text-align: center; margin-bottom: 20px; border: 1px dashed #ddd; padding: 10px;">

                <label for="Files-0-File">
                    Company Logo <br />
                    <img class="image-preview" style="margin-bottom: 10px; display: inline-block; width: 50%; border-top-left-radius: 6px; border-bottom-right-radius: 6px; padding: 8px;" alt="Logo" src="@logoUrl" />

                </label>

                <p class="company-files">
                    <input id="Files-0-File" name="Files[0].File" type="file" value="" data-val-file="1" data-increment="1" data-upload-image="1" class="input" />
                    <input id="Files-0-Name" name="Files[0].Name" type="hidden" value="Logo" />
                    <input id="Files-0-Description" name="Files[0].Description" class="input" type="hidden" value="Company Logo" />
                </p>

            </div>

            <div class="editor-label">
                @Html.LabelFor( model => model.CompanyName )
            </div>

            <div class="editor-field">
                @Html.TextBoxFor( model => model.CompanyName, new { @class = "input", @placeholder = "Enter Company Name" } )
                @Html.ValidationMessageFor( model => model.CompanyName )
            </div>

            <div class="editor-label">
                @Html.LabelFor( model => model.TradingAs )
            </div>
            <div class="editor-field">
                @Html.TextBoxFor( model => model.TradingAs, new { @class = "input", @placeholder = "Enter Trading As details" } )
                @Html.ValidationMessageFor( model => model.TradingAs )
            </div>
            <div class="editor-label">
                Company Registration Number
            </div>
            <div class="editor-field">
                @Html.TextBoxFor( model => model.CompanyRegistrationNumber, new { @class = "input", @placeholder = "Enter Registration Number" } )
                @Html.ValidationMessageFor( model => model.CompanyRegistrationNumber )
            </div>

            <div class="editor-label">
                @Html.LabelFor( model => model.VATNumber )
            </div>
            <div class="editor-field">
                @Html.TextBoxFor( model => model.VATNumber, new { @class = "input", @placeholder = "Enter VAT Number" } )
                @Html.ValidationMessageFor( model => model.VATNumber )
            </div>
            <div class="editor-label">
                @Html.LabelFor( model => model.ChepReference )
            </div>
            <div class="editor-field">
                @Html.TextBoxFor( model => model.ChepReference, new { @class = "input", @placeholder = "Enter Chep reference Number" } )
                @Html.ValidationMessageFor( model => model.ChepReference )
            </div>

            <div class="edit-label">
                @Html.LabelFor( model => model.Status )
            </div>
            <div class="edit-field">
                @Html.EnumDropDownFor( model => model.Status, false, new { @class = "chzn", @style = "width: 98%;" } )
                @Html.ValidationMessageFor( model => model.Status )
            </div>

            @if ( user.RoleType == RoleType.SuperAdmin )
            {
                <div class="editor-label">
                    @Html.LabelFor( model => model.PSPId )
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor( model => model.PSPId, model => model.PSPOptions, p => p.Key, p => p.Value, true, new { @class = "chzn", @style = "width: 98%;" } )
                </div>
            }

        </div>

        <div class="left" style="width: 31%; margin-right: 3%;">

            <p>
                <strong class="uppercase">Contact Details</strong>
            </p>

            <div class="editor-label">
                @Html.LabelFor( model => model.ContactPerson )
            </div>
            <div class="editor-field">
                @Html.TextBoxFor( model => model.ContactPerson, new { @class = "input", @placeholder = "Enter Contact Name" } )
                @Html.ValidationMessageFor( model => model.ContactPerson )
            </div>
            <div class="editor-label">
                @Html.LabelFor( model => model.ContactNumber )
            </div>
            <div class="editor-field">
                @Html.TextBoxFor( model => model.ContactNumber, new { @class = "input", @placeholder = "Enter Contact Number" } )
                @Html.ValidationMessageFor( model => model.ContactNumber )
            </div>

            <div class="editor-label">
                @Html.LabelFor( model => model.Email )
            </div>
            <div class="editor-field">
                @Html.TextBoxFor( model => model.Email, new { @class = "input", @placeholder = "Enter Email Address", type = "email" } )
                @Html.ValidationMessageFor( model => model.Email )
            </div>


            <div class="editor-label">
                @Html.LabelFor( model => model.AdminPerson )
            </div>
            <div class="editor-field">
                @Html.TextBoxFor( model => model.AdminPerson, new { @class = "input", @placeholder = "Enter Administrator Name" } )
                @Html.ValidationMessageFor( model => model.AdminPerson )
            </div>

            <div class="editor-label">
                @Html.LabelFor( model => model.AdminEmail )
            </div>
            <div class="editor-field">
                @Html.TextBoxFor( model => model.AdminEmail, new { @class = "input", @placeholder = "Enter Administrator Email Address", type = "email" } )
                @Html.ValidationMessageFor( model => model.AdminEmail )
            </div>


            <div class="editor-label">
                @Html.LabelFor( model => model.FinancialPerson )
            </div>
            <div class="editor-field">
                @Html.TextBoxFor( model => model.FinancialPerson, new { @class = "input", @placeholder = "Enter Financial Person Name" } )
                @Html.ValidationMessageFor( model => model.FinancialPerson )
            </div>

            <div class="editor-label">
                @Html.LabelFor( model => model.FinPersonEmail )
            </div>
            <div class="editor-field">
                @Html.TextBoxFor( model => model.FinPersonEmail, new { @class = "input", @placeholder = "Enter Financial Person Email Address", type = "email" } )
                @Html.ValidationMessageFor( model => model.FinPersonEmail )
            </div>

        </div>

        <div class="left" style="width: 31%;">

            <div class="editor-label" style="margin-bottom: 10px;">
                Documents
            </div>

            @if ( Model.Files.NullableAny( d => d.Name?.ToLower() != "logo" ) )
            {
                <div id="client-documents">

                    @Html.Partial( "_ClientDocuments", Model.Files )

                </div>
            }

            <div class="grouped-area" style="padding: 20px;">

                <div id="document-list">

                    <p class="company-files" style="border-bottom: 1px dashed #ccc; padding-bottom: 20px;">

                        <input id="Files-0-Name" name="Files[1].Name" type="hidden" value="File" />

                        <label for="Files-0-File">Select File</label>
                        <input id="Files-0-File" name="Files[1].File" type="file" value="" data-val-file="1" data-increment="1" class="input" />
                        <span class="block" style="height: 10px;">&nbsp;</span>

                        <label for="Files-0-File">File Description</label>
                        <input id="Files-0-Description" name="Files[1].Description" class="input" type="text" value="File Description" placeholder="Company File" />
                    </p>

                </div>

                <div style="padding: 10px 0 0 0;">
                    <a rel="tipsyW" title="Add another document?" class="add" data-add-one-more="1" data-target="#document-list" data-auto-increment="1" data-increment-val=".company-files">Add more</a>
                </div>

            </div>

            <div class="clear"></div>

            <div class="grouped-area">

                <p>
                    <strong class="uppercase">Address Details</strong>
                </p>

                @Html.HiddenFor( model => model.Address.Id )
                @Html.HiddenFor( model => model.Address.AddressType )

                <div class="editor-label">
                    @Html.LabelFor( model => model.Address.AddressLine1 )
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor( model => model.Address.AddressLine1, new { @class = "input", @placeholder = "Enter Company Address Line 1" } )
                    @Html.ValidationMessageFor( model => model.Address.AddressLine1 )
                </div>

                <div class="editor-field">
                    @Html.TextBoxFor( model => model.Address.AddressLine2, new { @class = "input", @placeholder = "Enter Company Address Line 2" } )
                    @Html.ValidationMessageFor( model => model.Address.AddressLine2 )
                </div>

                <div class="editor-label">
                    @Html.LabelFor( model => model.Address.Town )
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor( model => model.Address.Town, new { @class = "input", @placeholder = "Enter Company Address Town" } )
                    @Html.ValidationMessageFor( model => model.Address.Town )
                </div>

                <div class="editor-label">
                    @Html.LabelFor( model => model.Address.PostCode )
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor( model => model.Address.PostCode, new { @class = "input", @placeholder = "Enter Company Address Postal Code" } )
                    @Html.ValidationMessageFor( model => model.Address.PostCode )
                </div>

                <div class="editor-label">
                    @Html.LabelFor( model => model.Address.Province )
                </div>
                <div class="editor-field">

                    <select id="Address.Province" name="Address.Province" class="chzn" required="required" style="width: 100%;">
                        <option value="">-- select</option>
                        @foreach ( int p in Enum.GetValues( typeof( Province ) ) )
                        {
                            Province province = ( Province ) p;

                            string text = province.GetDisplayText();

                            if ( text.ToLower() == "all" )
                            {
                                continue;
                            }

                            string sel = ( province == Model.Address.Province ) ? "selected=selected" : string.Empty;

                            <option value="@p" @sel>@text</option>
                        }
                    </select>

                    @Html.ValidationMessageFor( model => model.Address.Province )
                </div>

            </div>

        </div>

        <div class="clear" style="border-bottom: 1px dashed #ccc; margin: 20px 0; height: 0;">&nbsp;</div>

        <div id="client-budget">

            @Html.Partial( "_ClientBudgets", Model.ClientBudgets )

        </div>

        <div class="clear" style="border-bottom: 1px dashed #ccc; margin: 20px 0; height: 0;">&nbsp;</div>

        <p>
            <input id="save-btn" type="submit" value="Update" />

            <span style="padding: 0 5px;">/</span>

            <a data-switch-tab="1" data-from-tab="#clients" data-to-tab="#linkproducts" data-id="@Model.Id">
                <i class="fa fa-link"></i>Link Products
            </a>

            <span style="padding: 0 5px;">/</span>

            <a data-cancel="1" data-target="#edit-item" data-remove="tr.edit">Cancel</a>
        </p>

    </div>
}
