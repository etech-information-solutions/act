@model PagingExtension

@using ACT.Data.Models;
@using ACT.Core.Enums;
@using ACT.Core.Models;
@using ACT.Core.Models.Custom;
@using ACT.Core.Services;

@{
    ViewBag.ShowExport = true;
    ViewBag.ShowCustom = true;

    ViewBag.ViewName = "_ClientGroups";
}


@Html.Partial( "_Notification" )


@{
    UserModel user = User.Get();
    Int32 count = Model.Start;
    List<GroupCustomModel> items = ( List<GroupCustomModel> ) Model.Items;
}


@if ( Model == null || !items.Any() )
{
    <div class="notification message-warn" style="margin-bottom: 20px;">
        There are no Groups available matching your search criteria.
    </div>
}


@if ( user.IsAdmin || user.IsPSPAdmin )
{
    <p>
        @Html.ActionLink( "Add", "AddGroup", new { }, new { @class = "add", @rel = "tipsyS", @title = "Add a new Group?", @data_edit = "1", @data_id = 0, @data_target = "#clientgroups" } )
        <span class="loader"></span>
    </p>
}

<input type="hidden" id="selectedgroup" name="selectedgroup" value="0" />

<table id="groups-table" class="da-table datatable-numberpaging sort fixed-header" data-fixed-header-target="#groups-table_wrapper" data-starting-point=".ap-tabs ul">
    <thead>
        <tr>
            <th data-name="Count">
                #
            </th>
            <th data-name="CreatedOn" data-column="g.CreatedOn">
                Created
            </th>
            <th data-name="Name" data-column="g.Name">
                Name
            </th>
            <th data-name="Description" data-column="g.Description">
                Description
            </th>
            <th data-name="Clients">
                Clients
            </th>
            <th data-name="Status" data-column="g.Status">
                Status
            </th>
            <th data-name="Actions">
                Actions
            </th>
        </tr>
    </thead>

    <tbody>
        @if ( Model != null && items != null && items.Count() > 0 )
        {
            foreach ( var item in items )
            {
                Status status = ( Status ) item.Status;

                string active = status.Equals( Status.Active ) ? "active" : "inactive";
                string enable = status.Equals( Status.Active ) ? "Disable" : "Enable";

                <tr id="tr-@item.Id-item" class="tr-@item.Id-item @active">
                    <td width="1%">
                        @count
                    </td>
                    <td>
                        @item.CreatedOn.ToString( "yyyy-MM-dd" )

                        <a class="block" rel="tipsyE" title="Review audit log" data-audit-log="1" data-pid="@item.Id" data-type="Client">
                            <img alt="" src="@Url.Content( "~/Images/duplicate-content.png" )" style="max-width: 15px;" />
                            <span></span>
                        </a>
                    </td>
                    <td>
                        @item.Name
                    </td>
                    <td>
                        @item.Description
                    </td>
                    <td>
                        <a class="docs" data-sticky-one="1" data-target="#group-@item.Id-clients" data-trigger="mouseover" data-arrow="center-right" data-title="Group Clients">
                            @item.ClientCount
                        </a>

                        <div id="group-@item.Id-clients" class="none">
                            @if ( item.Clients.NullableAny() )
                            {
                                <ul class="list">
                                    @foreach ( string c in item.Clients )
                                    {
                                        <li style="line-height: 20px;">
                                            @c
                                        </li>
                                    }
                                </ul>
                            }
                            else
                            {
                                <div class="message-warn">
                                    This group has no clients linked
                                </div>
                            }
                        </div>
                    </td>
                    <td>
                        @status.GetDisplayText()
                    </td>
                    <td width="15%">
                        @Html.ActionLink( "Details", "GroupDetails", new { id = item.Id }, new { @class = "info", @data_details = "1", @data_id = item.Id, @data_target = ".tr-" + item.Id + "-item" } )

                        @Html.ActionLink( "Edit", "EditGroup", new { id = item.Id, returnView = "ClientGroups" }, new { @class = "edit", @data_edit = "1", @data_id = item.Id, @data_target = ".tr-" + item.Id + "-item" } )

                        @Html.ActionLink( enable, "DeleteGroup", new { id = item.Id }, new { @class = "warn", @data_delete = "1", @data_id = item.Id, @data_target = "#tr-" + item.Id + "-item", @data_refresh_target = "#clientgroups", @rel = "tipsyE", @title = enable + " this item?" } )
                    </td>
                </tr>

                count++;
            }
        }
    </tbody>

</table>

@Html.Partial( "_Paging" )
