@model PagingExtension

@using ACT.Data.Models;
@using ACT.Core.Enums;
@using ACT.Core.Models;
@using ACT.Core.Models.Custom;
@using ACT.Core.Services;

@{
    ViewBag.ShowExport = true;
    //ViewBag.ShowCustom = true;
    //ViewBag.ShowQuickStructure = true;

    ViewBag.ViewName = "_ClientGroup";

}


@Html.Partial("_Notification")


@{
    UserModel user = User.Get();
    Int32 count = Model.Start;
    List<Group> items = (List<Group>)Model.Items;
}


@if (Model == null || !items.Any())
{
    <div class="notification message-warn" style="margin-bottom: 20px;">
        There are no Groups available matching your search criteria.
    </div>
}


@if (user.IsAdmin || user.IsPSPAdmin)
{
    <p>
        @Html.ActionLink("Add", "AddGroup", new { }, new { @class = "add", @rel = "tipsyS", @title = "Add a new Group?", @data_edit = "1", @data_id = 0, @data_target = "#clientgoups" })
        <span class="loader"></span>
    </p>
}
<input type="hidden" id="selectedgroup" name="selectedgroup" value="0" />
<table id="groups-table" class="da-table datatable-numberpaging sort fixed-header" data-fixed-header-target="#groups-table_wrapper" data-starting-point=".ap-tabs ul">
    <thead>
        <tr>
            <th data-name="Name" data-column="Name" style="width:40%;">
                Name
            </th>
            <th data-name="Cell" data-column="Cell" style="width:40%;">
                Group Description
            </th>
            <th data-name="Actions">
                Actions
            </th>
        </tr>
    </thead>

    <tbody>
        @if (Model != null && items != null && items.Count() > 0)
        {
            foreach (var item in items)
            {
                Status status = (Status)item.Status;

                String active = status.Equals(Status.Active) ? "activated" : "terminated";
                String enable = status.Equals(Status.Active) ? "Terminate" : "Activate";

        <tr id="tr-@item.Id-item" class="tr-@item.Id-item @active">

            <td style="width: 15%;">
                @item.Name
            </td>
            <td>
                @item.Description
            </td>
            <td width="15%">
                <input type="radio" id="group_id_@item.Id" onclick="UpdateGroups(@item.Id)" name="groups" value="@item.Id" />
                @Html.ActionLink("Edit", "EditGroup", new { id = item.Id, returnView = "ClientGroups" }, new { @class = "edit", @data_edit = "1", @data_id = item.Id, @data_target = ".tr-" + item.Id + "-item" })

                @Html.ActionLink(enable, "DeleteGroup", new { id = item.Id }, new { @class = "warn", @data_delete = "1", @data_id = item.Id, @data_target = "#tr-" + item.Id + "-item", @data_refresh_target = "#clientgroups", @rel = "tipsyE", @title = enable + " this item?" })
            </td>
        </tr>

                count++;
            }
        }
    </tbody>

</table>
<div id="BottomLists" style="display:none;">
    <div class="clear" style="border-bottom: 1px dashed #ccc; margin-bottom: 20px; height: 0;">&nbsp;</div>
    <div class="left" style="width: 42%; margin-right: 2%;">
        <h3>Excluded from Group</h3>
        <table id="groupsexcluded-table" class="da-table datatable-numberpaging sort fixed-header table-hover" data-fixed-header-target="#groupsexcluded-table_wrapper" data-starting-point=".ap-tabs ul">
            <thead>
                <tr>
                    <th data-name="Name" data-column="Name" style="width:40%;">
                        Client Name
                    </th>
                    <th data-name="TradingAs" data-column="TradingAs" style="width:40%;">
                        Trading As
                    </th>
                    <th data-name="CompanyRegistrationNumber" style="width:15%;">
                        Registration No
                    </th>
                    <th data-name="Actions" style="width:5%;">
                        Select
                    </th>
                </tr>
            </thead>

            <tbody id="excludedtabledata">
            </tbody>

        </table>

    </div>
    <div class="left" style="width: 5%; margin-left: 1%;">
        <br /><br /><br />
        <button id="Copy">>></button>
        <br />
        <br />
        <button id="Remove"><<</button>
    </div>
    <div class="left" style="width: 45%; margin-right: 2%;">
        <h3>Included in Group</h3>
        <table id="groupsincluded-table" class="da-table datatable-numberpaging sort fixed-header table-hover" data-fixed-header-target="#groupsincluded-table_wrapper" data-starting-point=".ap-tabs ul">
            <thead>
                <tr>
                    <th data-name="Name" data-column="Name" style="width:40%;">
                        Client Name
                    </th>
                    <th data-name="TradingAs" data-column="TradingAs" style="width:40%;">
                        Trading As
                    </th>
                    <th data-name="CompanyRegistrationNumber" style="width:15%;">
                        Registration No
                    </th>
                    <th data-name="Actions" style="width:5%;">
                        Select
                    </th>
                </tr>
            </thead>

            <tbody id="includedtabledata">
            </tbody>

        </table>

    </div>
</div>
<div class="clear" style="border-bottom: 1px dashed #ccc; margin-bottom: 20px; height: 0;">&nbsp;</div>

<script>
        $(document).ready(function () {
            $('#Copy').on('click', function () {
                var gId = $('#selectedgroup').val();
                var checkedItem = $('#excludedtabledata input[type=radio]:checked').val();
                    if (checkedItem != undefined) {
                        //save it first
                        SetIncludedGroup(gId,checkedItem);
                        //then update
                        UpdateGroups(gId);
                    } else {
                        alert('Nothing to Copy is selected');
                    }
                //alert(checkedItem);
               
            });

            $('#Remove').on('click', function () {
                var gId = $('#selectedgroup').val();
                var checkedItem = $('#includedtabledata input[type=radio]:checked').val();
                if (checkedItem != undefined) {
                    //save it first
                    SetExcludedGroup(gId, checkedItem);
                    //then update
                    UpdateGroups(gId);
                } else {
                    alert('Nothing to Remove is selected');
                }
            });
        });

    

    function UpdateGroups(gId) {
            $('#BottomLists').show();
            GetIncludedGroups(gId);
            GetExcludedGroups(gId);
        }

        function GetIncludedGroups(gId) {
            $('#selectedgroup').val(gId);
            var rowDiv = $("#groupsincluded-table tbody");
            $.ajax({
                type: "GET",
                url: "GetClientsForGroupIncluded",
                data: { groupId: gId },
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (data) {
                    // debugger;
                    rowDiv.html('');
                    var result = "";
                    $.each(data, function (id, client) {


                        result += '<tr id="tr-' + client.Id + '" class="tr-' + client.Id + '-item">' +                            
                            '<td style = "width: 35%;">' +
                            client.CompanyName +
                            '</td><td  style = "width: 35%;">' +
                            client.TradingAs +
                            '</td><td  style = "width: 20%;"> ' +
                            client.CompanyRegistrationNumber +
                            '</td><td><input type="radio" id="incl_item' + client.Id + '" name="incl_item"  value="' + client.Id +'" /></td></tr>';
                    });
                    rowDiv.html(result);

                },
                error: function (response) {
                    //  debugger;
                    alert('error');
                }
            });

        }

        function GetExcludedGroups(gId) {
            $('#selectedgroup').val(gId);
            var rowDiv = $("#groupsexcluded-table tbody");
            $.ajax({
                type: "GET",
                url: "GetClientsForGroupExcluded",
                data: { groupId: gId },
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (data) {
                  //  debugger;
                    rowDiv.html('');
                    var result = "";
                    $.each(data, function (id, client) {

                        result += '<tr id="tr-' + client.Id + '" class="tr-' + client.Id + '-item">' +
                            '<td style = "width: 35%;">' +
                            client.CompanyName +
                            '</td><td  style = "width: 35%;">' +
                            client.TradingAs +
                            '</td><td  style = "width: 20%;"> ' +
                            client.CompanyRegistrationNumber +
                            '</td><td><input type="radio" id="excl_item" name="excl_item" value="' + client.Id+'" /></td></tr>';
                    });
                    rowDiv.html(result);

                },
                error: function (response) {
                    // debugger;
                    alert('error');
                }
            });

    }


    function SetIncludedGroup(gId, cId) {
        var data = {
            "groupId": gId, "clientId": cId
        };
        $.ajax({
            type: 'POST',
            url: "SetClientForGroupIncluded",
            data: data,//$(this).serialize(),
            success: function (response) {
                if (response == "True") {
                    alert('Group Updated.');
                } else {
                    alert('Group could not be saved. Try again.');
                }
            }
        });
    }

    function SetExcludedGroup(gId, cId) {
        var data = {
            "groupId": gId, "clientId": cId
        };
        $.ajax({
            type: 'POST',
            url: "SetClientForGroupExcluded",
            data: data,//$(this).serialize(),
            success: function (response) {
                if (response == "True") {
                    alert('Group Updated.');
                } else {
                    alert('Group could not be saved. Try again.');
                }
            }
        });
    }
</script>
@*@Html.Partial( "_UserCustomSearch", new ACT.Core.Models.CustomSearchModel( "User" ) )*@

@Html.Partial("_Paging")
