@model ClientKPI

@using ACT.Core.Enums;
@using ACT.Data.Models;

@{
    if ( ViewBag.IncludeLayout == null )
    {
        Layout = null;
    }

    ViewBag.Title = "Client KPI";
    //string KPIPeriod = (TargetPeriod)Model => ).GetDisplayText();
}


<div id="item-details" class="item-details" style="width: auto;">

    @if ( ViewBag.IncludeLayout == null )
    {
        <h2>
            <img alt="" src="@Url.Content( "~/images/info.png" )" />
            <span>Client KPI</span>
        </h2>
    }

    <div class="left" style="width: 47%; margin-right: 4%;">

        <div class="display-label">
            Client
        </div>
        <div class="display-field">
            @Html.DisplayFor( model => model.Client.CompanyName )
        </div>

        <div class="display-label">
            KPI Description
        </div>
        <div class="display-field">
            @Html.DisplayFor( model => model.KPIDescription )
        </div>

        <div class="display-label">
            Outstanding Pallets
        </div>
        <div class="display-field">
            @Html.DisplayFor( model => model.OutstandingPallets )
        </div>

        <div class="display-label">
            Disputes
        </div>
        <div class="display-field">
            @Html.DisplayFor( model => model.Disputes )
        </div>

        <div class="display-label">
            Passons
        </div>
        <div class="display-field">
            @Html.DisplayFor( model => model.Passons )
        </div>

        <div class="display-label">
            Resolve Days
        </div>
        <div class="display-field">
            @Html.DisplayFor( model => model.ResolveDays )
        </div>

    </div>

    <div class="left" style="width: 47%;">

        <div class="display-label">
            Outstanding Days
        </div>
        <div class="display-field">
            @Html.DisplayFor( model => model.OutstandingDays )
        </div>

        <div class="display-label">
            Monthly Cost
        </div>
        <div class="display-field">
            @Html.DisplayFor( model => model.MonthlyCost )
        </div>

        <div class="display-label">
            Weighted Percentage
        </div>
        <div class="display-field">
            @Html.DisplayFor( model => model.Weight ) %
        </div>

        <div class="display-label">
            Target Amount
        </div>
        <div class="display-field">
            @Html.DisplayFor( model => model.TargetAmount )
        </div>

        <div class="display-label">
            Target Period
        </div>
        <div class="display-field">
            @(( ( TargetPeriod ) Model.TargetPeriod ).GetDisplayText())
        </div>

        <div class="display-label">
            Status
        </div>
        <div class="display-field">
            @(( ( Status ) Model.Status ).GetDisplayText())
        </div>

    </div>

    <div class="clear" style="border-bottom: 1px dashed #ccc; margin-bottom: 10px; height: 20px;">&nbsp;</div>

    @if ( ViewBag.IncludeLayout == null )
    {
        <p>
            @Html.ActionLink( "Edit", "EditKPI", new { id = Model.Id }, new { @class = "edit", @data_edit = "1", @data_id = Model.Id, @data_target = "#tr-" + Model.Id + "-item" } )

            @if ( ViewBag.IncludeLayout == null )
            {
                <span style="padding: 0 5px;">/</span>
                <a data-cancel="1" data-target="#item-details" data-remove="tr.edit">Cancel</a>
            }
        </p>
    }

    @if ( ViewBag.IncludeLayout != null )
    {
        <div class="back-to-list">
            @Html.ActionLink( "Back to List", "Index" )
        </div>
    }

</div>
