@model ACT.UI.Models.GroupViewModel

@using ACT.Core.Enums;
@using ACT.Data.Models;

@{
    /**/

    if (ViewBag.IncludeLayout == null)
    {
        Layout = null;
    }

    ViewBag.Title = "Add Group";
}


@Html.Partial("_Notification")

@using (Html.BeginForm("AddGroup", "Client", FormMethod.Post, new { @data_ajax_form = "1", @data_target = "#clientgroups", @class = "custom-validate", @style = "width: auto;" }))
{    
    <div id="edit-item">

        <h2 class="uppercase" style="width: auto;">
            <img alt="" src="@Url.Content("~/images/add.png")" />
            <span>Add Group</span>
        </h2>

        @Html.ValidationSummary(true)

        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.GroupClientList)

        <div id="item-details" class="item-details" style="width: auto;">



            <div class="left" style="width: 45%; margin-right: 1%;">

                <div class="editor-label">
                    Name
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.Name, new { @class = "input", @placeholder = "Enter Group Name" })
                    @Html.ValidationMessageFor(model => model.Name)
                </div>
            </div>
            <div class="left" style="width: 45%; margin-right: 1%;">
                <div class="editor-label">
                    Description
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.Description, new { @class = "input", @placeholder = "Enter Group Description" })
                    @Html.ValidationMessageFor(model => model.Description)
                </div>
            </div>
            <div class="clear" style="margin-bottom: 20px;">&nbsp;</div>
            <div class="left" style="width: 45%; margin-right: 1%;">
                <div class="editor-label">
                    Clients
                </div>
                <div class="editor-field">
                    * Please select client(s) from the options below
                    <select id="ClientListGroupDDL" name="ClientListGroupDDL" onchange="ClientListChanged()" class="chzn" multiple style="width: 98%;">
                        <!--  -->
                        @*@Html.DropDownListFor(model => model.ClientId,
        new SelectList(ViewBag.ClientList, "Value", "Text"),
        "Please Select",
        new { @class = "form-control", @onchange= "ClientListChanged()" })*@

                        @foreach (var item in ViewBag.ClientList)
                        {
                            <option value="@item.Value">@item.Text</option>
                        }
                    </select>
                </div>
            </div>

            @*<div class="left" style="width: 45%;">
                <div class="edit-label">
                    @Html.LabelFor(model => model.Status)
                </div>
                <div class="edit-field">
                    @Html.EnumDropDownFor(model => model.Status, false, new { @class = "chzn", @style = "width: 98%;" })
                    @Html.ValidationMessageFor(model => model.Status)
                </div>

            </div>*@
            @*@(((Status)Model.Status).GetDisplayText())*@
            @*@Html.EnumDropDownFor(model => model.Status, false, new { @class = "chzn", @style = "width: 98%;" })
            @Html.ValidationMessageFor(model => model.Status)*@


            <div class="clear" style="border-bottom: 1px dashed #ccc; margin-bottom: 20px;">&nbsp;</div>

            <p>
                <input id="save-btn" type="submit" value="Save" />

                <span style="padding: 0 5px;">/</span>

                <a data-refresh="1" data-target="#clientgroups">Cancel</a>
            </p>
            <div class="clear" style="border-bottom: 1px dashed #ccc; margin-bottom: 10px; height: 0;">&nbsp;</div>
        </div>
    </div>
}
    <script>
        $(document).ready(function () {
     //       $("#ClientListGroupDDL").change(function () {
     //           debugger;
     //       //var client = $('option:selected', this).val();
     //       //var dd = document.getElementById("ClientListGroupDDL");
     //       //var client = dd.options[dd.selectedIndex].value;   
     //       //var clientlist = $('#GroupClientList').val();
     //       //$('#GroupClientList').removeAttr("disabled");
     //           //$('#GroupClientList').val(clientlist + client + ',');
     //           var selectedValues = [];
     //           $("#ClientListGroupDDL :selected").each(function () {
     //               selectedValues.push($(this).val());
     //           });
     //           var clientlist = selectedValues.join();
     //           $('#GroupClientList').val(clientlist);
     //           //replace every time
         
     //});
 });

        function ClientListChanged() {
            
            var selectedValues = [];
            $("#ClientListGroupDDL :selected").each(function () {
                selectedValues.push($(this).val());
            });
            var clientlist = selectedValues.join();
            $('#GroupClientList').val(clientlist);
        //    //debugger;
        //    var dd = document.getElementById("ClientListGroupDDL");
        //    var client = dd.options[dd.selectedIndex].value;   
        //    //var clientTest = $('option:selected', this).val();
        //    //var client = $('#ClientList').val();
        //    var clientlist = $('#GroupClientList').val();
        //     $('#GroupClientList').removeAttr("disabled");
        //     $('#GroupClientList').val(clientlist + client + ',');

        }
    </script>