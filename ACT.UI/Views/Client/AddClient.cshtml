@model ClientViewModel

@using ACT.UI.Models;
@using ACT.Core.Enums;

@{
    if (ViewBag.IncludeLayout == null)
    {
        Layout = null;
    }

    ViewBag.Title = "Add Client";
}


@Html.Partial("_Notification")

@using (Html.BeginForm("AddClient", "Client", FormMethod.Post, new { enctype = "multipart/form-data", @data_ajax_form = "1", @data_target = "#clientlist", @class = "custom-validate", @style = "width: auto;" }))
{
<div id="edit-item">

    <h2 class="uppercase" style="width: auto;">
        <img alt="" src="@Url.Content( "~/images/add.png" )" />
        <span>Add Client</span>
    </h2>

    @Html.ValidationSummary(true)

    @Html.HiddenFor(model => model.Id)

    <div id="item-details" class="item-details" style="width: auto;">
        <div class="left" style="width: 60%; margin-right: 2%;">

            <div class="left" style="width: 50%; margin-right: 2%;">

                <div class="editor-label uppercase">
                    Client Name
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.CompanyName, new { @class = "input", @placeholder = "Enter Company Name" })
                    @Html.ValidationMessageFor(model => model.CompanyName)
                </div>
                <div class="editor-label uppercase">
                    Company Registration Number
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.CompanyRegistrationNumber, new { @class = "input", @placeholder = "Enter Registration Number" })
                    @Html.ValidationMessageFor(model => model.CompanyRegistrationNumber)
                </div>

                <h3>Contact Details</h3>
                <div class="editor-label uppercase">
                    Contact Number
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.ContactNumber, new { @class = "input", @placeholder = "Enter Contact Number" })
                    @Html.ValidationMessageFor(model => model.ContactNumber)
                </div>

                <div class="editor-label uppercase">
                    Contact Person
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.ContactPerson, new { @class = "input", @placeholder = "Enter Contact Name" })
                    @Html.ValidationMessageFor(model => model.ContactPerson)
                </div>

            </div>

            <div class="left" style="width: 45%;">

                <div class="editor-label uppercase">
                    Trading As
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.TradingAs, new { @class = "input", @placeholder = "Enter Trading As details" })
                    @Html.ValidationMessageFor(model => model.TradingAs)
                </div>
                <div class="editor-label uppercase">
                    VAT Number
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.VATNumber, new { @class = "input", @placeholder = "Enter VAT Number" })
                    @Html.ValidationMessageFor(model => model.VATNumber)
                </div>


                <h3>&nbsp;</h3>

                <div class="editor-label uppercase">
                    Email Address
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.Email, new { @class = "input", @placeholder = "Enter Email Address" })
                    @Html.ValidationMessageFor(model => model.Email)
                </div>

            </div>

            <div class="clear" style="border-bottom: 1px dashed #ccc; margin-bottom: 10px; height: 20px;">&nbsp;</div>


            <div class="left" style="width: 48%; margin-right: 4%;">
                <input id="Address.AddressType" name="Address.AddressType" type="hidden" value="@( ( int ) AddressType.Postal )" />

                <div class="editor-label">
                    @Html.LabelFor(model => model.Address.AddressLine1)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.Address.AddressLine1, new { @class = "input", @placeholder = "Enter Company Address Line 1" })
                    @Html.ValidationMessageFor(model => model.Address.AddressLine1)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.Address.Town)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.Address.Town, new { @class = "input", @placeholder = "Enter Company Address Town" })
                    @Html.ValidationMessageFor(model => model.Address.Town)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.Address.PostCode)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.Address.PostCode, new { @class = "input", @placeholder = "Enter Company Address Postal Code" })
                    @Html.ValidationMessageFor(model => model.Address.PostCode)
                </div>

            </div>

            <div class="left" style="width: 48%;">


                <div class="editor-label">
                    @Html.LabelFor(model => model.Address.AddressLine2)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.Address.AddressLine2, new { @class = "input", @placeholder = "Enter Company Address Line 2" })
                    @Html.ValidationMessageFor(model => model.Address.AddressLine2)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.Address.Province)
                </div>
                <div class="editor-field">

                    <select id="Address.Province" name="Address.Province" class="chzn" required="required" style="width: 100%;">
                        <option value="">-- select</option>
                        @foreach (int p in Enum.GetValues(typeof(Province)))
                        {
                            string text = ((Province)p).GetDisplayText();

                            if (text.ToLower() == "all")
                            {
                                continue;
                            }

                            <option value="@p">@text</option>
                        }
                    </select>

                    @Html.ValidationMessageFor(model => model.Address.Province)
                </div>

            </div>
        </div>

        <div class="left" style="width: 33%; margin-right: 4%;">

            <div class="editor-label uppercase">
                Logo
            </div>
            <div class="editor-field">
                <input id="Logo.File" name="Logo.File" type="file" value="" data-val-file="1" class="input" />
                <input id="Logo.Name" name="Logo.Name" type="hidden" value="Company File" />
                <input id="Logo.Description" name="Logo.Description" class="input" type="hidden" value="Company Logo" />
            </div>
            <div class="editor-label uppercase">
                <h3>Upload Documents</h3>
                <div class="editor-field" style="margin-bottom: 10px;">
                    @if (Model.CompanyFile != null && Model.CompanyFile.Count() > 0)
                    {
                        foreach (FileViewModel companyFile in Model.CompanyFile)
                        {
                            @Html.HiddenFor(model => companyFile.Id)

                            <div style="border: 1px dashed #002e70; border-radius: 4px; padding: 4px; margin-bottom: 20px; width: 94%;">

                                <a target="_blank" href="@Url.Action("ViewDocument", "CLient", new { @id = companyFile.Id })">
                                    <img alt="download" src="@Url.Content("~/Images/download.png")" style="margin-bottom: 2px;" />

                                    companyFile.Name (companyFile.Extension)
                                </a>

                            </div>

                        }
                    }


                    <input id="CompanyFile.File" name="CompanyFile.File" type="file" value="" data-val-file="1" class="input" />
                    <input id="CompanyFile.Name" name="CompanyFile.Name" type="hidden" value="Company File" />
                    <input id="CompanyFile.Description" name="CompanyFile.Description" class="input" type="hidden" value="Company File" />

                    @*@Html.ValidationMessageFor(model => companyFile.RegistrationFile)*@

                </div>
            </div>
        </div>


        <div class="clear" style="border-bottom: 1px dashed #ccc; margin-bottom: 20px; height: 0;">&nbsp;</div>
        <p>
            <strong class="uppercase">KPI</strong>
        </p>
        <div class="left" style="width: 40%; margin-right: 4%;">
            <div class="editor-label uppercase">
                Outstanding
            </div>
            <div class="editor-field">
                <input type="text" class="input" placeholder="KPI Outstanding" />
            </div>

            <div class="editor-label uppercase">
                Disputes
            </div>
            <div class="editor-field">
                <input type="text" class="input" placeholder="Disputes" />
            </div>

        </div>

        <div class="left" style="width: 40%; margin-right: 4%;">
            <div class="editor-label uppercase">
                Days Outstanding
            </div>
            <div class="editor-field">
                <input type="text" class="input" placeholder="Days Outstanding" />
            </div>

            <div class="editor-label uppercase">
                Days to Resolve
            </div>
            <div class="editor-field">
                <input type="text" class="input" placeholder="Days to Resolve" />
            </div>

        </div>

        <div class="clear" style="border-bottom: 1px dashed #ccc; margin-bottom: 20px; height: 0;">&nbsp;</div>
        <p>
            <strong class="uppercase">Client Budget</strong>
        </p>
        <div class="editor-label" style="margin-bottom: 10px;">
            @Html.LabelFor(model => model.ClientBudget)
        </div>

        <div class="editor-field">

            <table id="PSPBudget-table" class="da-table" style="border-bottom: 0;">

                <thead>
                    <tr>
                        <th>Jan</th>
                        <th>Feb</th>
                        <th>Mar</th>
                        <th>Apr</th>
                        <th>May</th>
                        <th>Jun</th>
                        <th>Jul</th>
                        <th>Aug</th>
                        <th>Sep</th>
                        <th>Oct</th>
                        <th>Nov</th>
                        <th>Dec</th>
                    </tr>
                </thead>

                <tbody>
                    @Html.HiddenFor(model => Model.ClientBudget)
                    <tr>
                        <td>
                            @Html.TextBoxFor(model => Model.ClientBudget.BudgetYear, new { @class = "input", @type = "number", @style = "padding: 0 5px; width: 87%;", @placeholder = "E.g 2020" })
                        </td>
                        <td>
                            @Html.TextBoxFor(model => Model.ClientBudget.January, new { @class = "input", @type = "number", @style = "padding: 0 5px; width: 87%;", @placeholder = "E.g 10" })
                        </td>
                        <td>
                            @Html.TextBoxFor(model => Model.ClientBudget.February, new { @class = "input", @type = "number", @style = "padding: 0 5px; width: 87%;", @placeholder = "E.g 20" })
                        </td>
                        <td>
                            @Html.TextBoxFor(model => Model.ClientBudget.March, new { @class = "input", @type = "number", @style = "padding: 0 5px; width: 87%;", @placeholder = "E.g 30" })
                        </td>
                        <td>
                            @Html.TextBoxFor(model => Model.ClientBudget.April, new { @class = "input", @type = "number", @style = "padding: 0 5px; width: 87%;", @placeholder = "E.g 40" })
                        </td>
                        <td>
                            @Html.TextBoxFor(model => Model.ClientBudget.May, new { @class = "input", @type = "number", @style = "padding: 0 5px; width: 87%;", @placeholder = "E.g 50" })
                        </td>
                        <td>
                            @Html.TextBoxFor(model => Model.ClientBudget.June, new { @class = "input", @type = "number", @style = "padding: 0 5px; width: 87%;", @placeholder = "E.g 60" })
                        </td>
                        <td>
                            @Html.TextBoxFor(model => Model.ClientBudget.July, new { @class = "input", @type = "number", @style = "padding: 0 5px; width: 87%;", @placeholder = "E.g 70" })
                        </td>
                        <td>
                            @Html.TextBoxFor(model => Model.ClientBudget.August, new { @class = "input", @type = "number", @style = "padding: 0 5px; width: 87%;", @placeholder = "E.g 80" })
                        </td>
                        <td>
                            @Html.TextBoxFor(model => Model.ClientBudget.September, new { @class = "input", @type = "number", @style = "padding: 0 5px; width: 87%;", @placeholder = "E.g 45" })
                        </td>
                        <td>
                            @Html.TextBoxFor(model => Model.ClientBudget.October, new { @class = "input", @type = "number", @style = "padding: 0 5px; width: 87%;", @placeholder = "E.g 15" })
                        </td>
                        <td>
                            @Html.TextBoxFor(model => Model.ClientBudget.November, new { @class = "input", @type = "number", @style = "padding: 0 5px; width: 87%;", @placeholder = "E.g 25" })
                        </td>
                        <td>
                            @Html.TextBoxFor(model => Model.ClientBudget.December, new { @class = "input", @type = "number", @style = "padding: 0 5px; width: 87%;", @placeholder = "E.g 35" })
                        </td>
                    </tr>
                </tbody>

            </table>

        </div>

        <div class="clear" style="border-bottom: 1px dashed #ccc; margin-bottom: 10px; height: 20px;">&nbsp;</div>


        <p>
            <input id="save-btn" type="submit" value="Save" />

            <span style="padding: 0 5px;">/</span>

            <a data-refresh="1" data-target="#clientlist">Cancel</a>
        </p>
        <div class="clear" style="border-bottom: 1px dashed #ccc; margin-bottom: 10px; height: 0;">&nbsp;</div>
    </div>

</div>
}