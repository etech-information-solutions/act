@model Dispute

@using ACT.Core.Enums
@using ACT.Data.Models;

@{
    if ( ViewBag.IncludeLayout == null )
    {
        Layout = null;
    }

    ViewBag.Title = "Details";
}

@if ( ViewBag.IncludeLayout != null )
{
    <h2>
        <img alt="" src="@Url.Content( "~/images/info.png" )" />
        <span>Dispute Details</span>
    </h2>
}

<div id="item-details" class="item-details" style="width: auto;">

    @if ( ViewBag.IncludeLayout == null )
    {
        <h2>
            <img alt="" src="@Url.Content( "~/images/info.png" )" />
            <span>Dispute Details</span>
        </h2>
    }

    <div class="left" style="width: 31%; margin-right: 3%;">

        <div class="display-label">
            Days Left
        </div>
        <div class="display-field">
            @Html.DisplayFor( model => model.DaysLeft )
        </div>

        <div class="display-label">
            Docket #
        </div>
        <div class="display-field">
            @Html.DisplayFor( model => model.DocketNumber )
        </div>

        <div class="display-label">
            Original Docket #
        </div>
        <div class="display-field">
            @Html.DisplayFor( model => model.OriginalDocketNumber )
        </div>

        <div class="display-label">
            Ref #
        </div>
        <div class="display-field">
            @Html.DisplayFor( model => model.Reference )
        </div>

        <div class="display-label">
            Other Ref #
        </div>
        <div class="display-field">
            @Html.DisplayFor( model => model.OtherReference )
        </div>

        <div class="display-label">
            TDN
        </div>
        <div class="display-field">
            @Html.DisplayFor( model => model.TDNNumber )
        </div>

        <div class="display-label">
            Action
        </div>
        <div class="display-field">
            @Html.DisplayFor( model => model.Action )
        </div>

        <div class="display-label">
            Action By
        </div>
        <div class="display-field">
            @( $"{Model.User?.Name} {Model.User?.Surname}" )
        </div>

        <div class="display-label">
            Status
        </div>
        <div class="display-field">
            @(( ( DisputeStatus ) Model.Status ).GetDisplayText())
        </div>

        @if ( ( DisputeStatus ) Model.Status == DisputeStatus.Resolved || ( DisputeStatus ) Model.Status == DisputeStatus.Cancelled )
        {
            <div class="display-label">
                @( ( ( DisputeStatus ) Model.Status ).GetDisplayText() ) By
            </div>
            <div class="display-field">
                @( $"{Model.User1?.Name} {Model.User1?.Surname}" )
            </div>

            <div class="display-label">
                @( ( ( DisputeStatus ) Model.Status ).GetDisplayText() ) On
            </div>
            <div class="display-field">
                @( Model.ResolvedOn?.ToString( "yyyy-MM-dd @ HH:mm" ) )
            </div>
        }

        <div class="display-label">
            Docket Found?
        </div>
        <div class="display-field">
            @(Model.HasDocket == 1 ? "Yes" : "NO")
        </div>

    </div>

    <div class="left" style="width: 31%; margin-right: 3%;">

        <div class="display-label">
            Dispute Reason
        </div>
        <div class="display-field">
            @Html.DisplayFor( model => model.DisputeReason )
        </div>

        <div class="display-label">
            Dispute Email
        </div>
        <div class="display-field">
            @Html.DisplayFor( model => model.DisputeEmail )
        </div>

        <div class="display-label">
            Other Party
        </div>
        <div class="display-field">
            @Html.DisplayFor( model => model.OtherParty )
        </div>

        <div class="display-label">
            Sender
        </div>
        <div class="display-field">
            @Html.DisplayFor( model => model.Sender )
        </div>

        <div class="display-label">
            Receiver
        </div>
        <div class="display-field">
            @Html.DisplayFor( model => model.Receiver )
        </div>

        <div class="display-label">
            Declarer
        </div>
        <div class="display-field">
            @Html.DisplayFor( model => model.Declarer )
        </div>

        <div class="display-label">
            Quantity
        </div>
        <div class="display-field">
            @( Math.Round( Model.Quantity ?? 0, 0 ) )
        </div>

        <div class="display-label">
            Equipment
        </div>
        <div class="display-field">
            @Html.DisplayFor( model => model.Equipment )
        </div>

        <div class="display-label">
            Equipment Code
        </div>
        <div class="display-field">
            @Html.DisplayFor( model => model.EquipmentCode )
        </div>

        <div class="display-label">
            Dispute Comment
        </div>
        <div class="display-field">
            @Html.DisplayFor( model => model.DisputeComment )
        </div>

    </div>

    <div class="left" style="width: 31%;">

        <div class="display-label">
            Location
        </div>
        <div class="display-field">
            @Html.DisplayFor( model => model.Location )
        </div>

        <div class="display-label">
            Location ID
        </div>
        <div class="display-field">
            @Html.DisplayFor( model => model.LocationId )
        </div>

        <div class="display-label">
            Effective Date
        </div>
        <div class="display-field">
            @( Model.EffectiveDate?.ToString( "yyyy-MM-dd" ) )
        </div>

        <div class="display-label">
            Ship Date
        </div>
        <div class="display-field">
            @( Model.ShipDate?.ToString( "yyyy-MM-dd" ) )
        </div>

        <div class="display-label">
            Delilvery Date
        </div>
        <div class="display-field">
            @( Model.DelilveryDate?.ToString( "yyyy-MM-dd" ) )
        </div>

        <div class="display-label">
            Correction Request Date
        </div>
        <div class="display-field">
            @( Model.CorrectionRequestDate?.ToString( "yyyy-MM-dd" ) )
        </div>

        <div class="display-label">
            Correction Request #
        </div>
        <div class="display-field">
            @Html.DisplayFor( model => model.CorrectionRequestNumber )
        </div>

        <div class="display-label">
            Transaction Type
        </div>
        <div class="display-field">
            @Html.DisplayFor( model => model.TransactionType )
        </div>

        <div class="display-label">
            Data Source
        </div>
        <div class="display-field">
            @Html.DisplayFor( model => model.DataSource )
        </div>

    </div>

    <div class="clear" style="border-bottom: 1px dashed #ccc; margin-bottom: 20px; height: 0;">&nbsp;</div>

    @if ( ViewBag.IncludeLayout == null )
    {
        <p>
            @Html.ActionLink( "Edit", "EditDispute", new { id = Model.Id }, new { @class = "edit", @data_edit = "1", @data_id = Model.Id, @data_target = "#tr-" + Model.Id + "-item" } )

            @if ( ViewBag.IncludeLayout == null )
            {
                <span style="padding: 0 5px;">/</span>
                <a data-cancel="1" data-target="#item-details" data-remove="tr.edit">Cancel</a>
            }
        </p>
    }

    @if ( ViewBag.IncludeLayout != null )
    {
        <div class="back-to-list">
            @Html.ActionLink( "Back to List", "Index" )
        </div>
    }

</div>
