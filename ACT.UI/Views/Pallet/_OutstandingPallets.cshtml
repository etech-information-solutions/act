@model PagingExtension

@using ACT.Core.Enums;
@using ACT.Core.Models;
@using ACT.Core.Models.Custom;

@{
    ViewBag.ShowExport = true;
    ViewBag.ShowCustom = true;

    ViewBag.ViewName = "_OutstandingPallets";
}


@Html.Partial( "_Notification" )


@{
    UserModel user = User.Get();

    Int32 count = Model.Start;
    List<ChepLoadCustomModel> items = ( List<ChepLoadCustomModel> ) Model.Items;
}


@if ( Model == null || !items.Any() )
{
    <div class="notification message-warn" style="margin-bottom: 20px;">
        There are no Outstanding Pallets Entries available matching your search criteria.
    </div>
}

<table id="OutstandingPallets-table" class="da-table datatable-numberpaging sort fixed-header" data-fixed-header-target="#OutstandingPallets-table_wrapper" data-starting-point=".ap-tabs ul">
    <thead>
        <tr>
            <th data-name="Count">
                #
            </th>
            <th data-name="CreatedOn" data-column="cl.CreatedOn">
                Imported/Created
            </th>
            <th data-name="LoadDate" data-column="cl.LoadDate">
                Load Date
            </th>
            <th data-name="CreateDate" data-column="cl.CreateDate">
                Created
            </th>
            <th data-name="CompanyName" data-column="c.CompanyName">
                Client
            </th>
            <th data-name="DocketNumber" data-column="cl.DocketNumber">
                Docket #
            </th>
            <th data-name="Ref" data-column="cl.Ref">
                Ref #
            </th>
            <th data-name="Equipment" data-column="cl.Equipment">
                Equipment
            </th>
            <th data-name="InvoiceNumber" data-column="cl.InvoiceNumber">
                Invoice #
            </th>
            <th data-name="TransactionType" data-column="cl.TransactionType">
                Transaction Type
            </th>
            <th data-name="Quantity" data-column="cl.Quantity">
                Qty
            </th>
            <th data-name="Actions">
                Actions
            </th>
        </tr>
    </thead>

    <tbody>
        @if ( Model != null && items != null && items.Count() > 0 )
        {
            foreach ( var item in items )
            {
                ReconciliationStatus status = ( ReconciliationStatus ) item.Status;
                PostingType postingType = ( PostingType ) item.PostingType;

                string active = status == ReconciliationStatus.Reconciled ? "active" : "inactive";

                <tr id="tr-@item.Id-item-op" class="tr-@item.Id-item-op @active">

                    <td width="1%">
                        @count
                    </td>
                    <td>
                        @item.CreatedOn.ToString( "yyyy-MM-dd @ HH:mm tt" )
                    </td>
                    <td>
                        @item.EffectiveDate.Value.ToString( "yyyy-MM-dd" )
                    </td>
                    <td>
                        On @(item.CreateDate?.ToString( "yyyy-MM-dd" ) ) <br /> by @item.CreatedBy
                    </td>
                    <td>
                        @item.ClientName
                    </td>
                    <td>
                        @item.DocketNumber
                    </td>
                    <td>
                        @item.Ref
                    </td>
                    <td>
                        @item.Equipment
                    </td>
                    <td>
                        @item.InvoiceNumber
                    </td>
                    <td>
                        @item.TransactionType
                    </td>
                    <td>
                        @item.Quantity
                    </td>
                    <td width="5%">

                        <div style="border-bottom: 1px dashed #7368e3; padding-bottom: 4px; margin-bottom: 10px;">

                            @Html.ActionLink( "Details", "PoolingAgentDataDetails", new { id = item.Id }, new { @class = "info", @data_details = "1", @data_id = item.Id, @data_target = ".tr-" + item.Id + "-item" } )

                        </div>

                        @Html.ActionLink( "Allocate", "AllocatePoolingAgentData", new { id = item.Id, returnView = "PoolingAgentData" }, new { @class = "edit", @data_edit = "1", @data_id = item.Id, @data_target = ".tr-" + item.Id + "-item-op" } )

                    </td>

                </tr>

                count++;
            }
        }
    </tbody>

</table>

@Html.Partial( "_Paging" )

