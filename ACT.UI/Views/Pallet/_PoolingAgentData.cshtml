@model PagingExtension

@using ACT.Core.Enums;
@using ACT.Core.Models;
@using ACT.Core.Models.Custom;

@{
    ViewBag.ShowExport = true;
    ViewBag.ShowCustom = true;

    ViewBag.ViewName = "_PoolingAgentData";
}


@Html.Partial( "_Notification" )


@{
    UserModel user = User.Get();

    int count = Model.Start;
    List<ChepLoadCustomModel> items = ( List<ChepLoadCustomModel> ) Model.Items;
}


@if ( Model == null || !items.Any() )
{
    <div class="notification message-warn" style="margin-bottom: 20px;">
        There are no Pooling Agent Load Entries available matching your search criteria.
    </div>
}

<p>
    @Html.ActionLink( "Import", "ImportPoolingAgentData", new { IsExchange = false }, new { @class = "csv", @rel = "tipsyS", @title = "Import Chep loads?", @data_edit = "1", @data_id = 0, @data_target = "#poolingagentdata" } )

    <span style="padding: 0 5px;">|</span>

    @Html.ActionLink( "Import Exchange Load", "ImportPoolingAgentData", new { IsExchange = true }, new { @class = "csv", @rel = "tipsyS", @title = "Import Exchange Loads?", @data_edit = "1", @data_id = 0, @data_target = "#poolingagentdata" } )

    <span class="loader"></span>
</p>

<table id="pad-table" class="da-table datatable-numberpaging sort fixed-header" data-fixed-header-target="#pad-table_wrapper" data-starting-point=".ap-tabs ul">
    <thead>
        <tr>
            <th data-name="Count">
                #
            </th>
            <th data-name="CreateDate" data-column="cl.CreateDate">
                Created
            </th>
            <th data-name="LoadDate" data-column="cl.LoadDate">
                Load Date
            </th>
            <th data-name="CompanyName" data-column="c.CompanyName">
                Client
            </th>
            <th data-name="DocketNumber" data-column="cl.DocketNumber">
                Docket #
            </th>
            <th data-name="Ref" data-column="cl.Ref">
                Ref
            </th>
            <th data-name="OtherRef" data-column="cl.OtherRef">
                Other Ref
            </th>
            <th data-name="InvoiceNumber" data-column="cl.InvoiceNumber">
                Invoice #
            </th>
            <th data-name="TransactionType" data-column="cl.TransactionType">
                Transaction Type
            </th>
            <th data-name="Quantity" data-column="cl.Quantity">
                Qty
            </th>
            <th data-name="Status" data-column="cl.Status">
                Status
            </th>
            <th data-name="BalanceStatus" data-column="cl.BalanceStatus">
                Balanced
            </th>
            <th data-name="Actions">
                Actions
            </th>
        </tr>
    </thead>

    <tbody>
        @if ( Model != null && items != null && items.Count() > 0 )
        {
            foreach ( var item in items )
            {
                PostingType postingType = ( PostingType ) item.PostingType;
                BalanceStatus balanceStatus = ( BalanceStatus ) item.BalanceStatus;
                ReconciliationStatus status = ( ReconciliationStatus ) item.Status;

                string active = status == ReconciliationStatus.Reconciled ? "active" : "inactive";

                <tr id="tr-@item.Id-item" class="tr-@item.Id-item @active">

                    <td width="1%">
                        @count
                    </td>
                    <td>
                        On @(item.CreateDate?.ToString( "yyyy-MM-dd" ) ) <br /> by @item.CreatedBy
                    </td>
                    <td>
                        @(item.EffectiveDate?.ToString( "yyyy-MM-dd" ))
                    </td>
                    <td>
                        @item.ClientName
                    </td>
                    <td>
                        @item.DocketNumber
                    </td>
                    <td>
                        @item.Ref
                    </td>
                    <td>
                        @item.OtherRef
                    </td>
                    <td>
                        @item.InvoiceNumber
                    </td>
                    <td>
                        @item.TransactionType
                    </td>
                    <td>
                        @item.Quantity
                    </td>
                    <td class="@(status == ReconciliationStatus.Reconciled ? "active" : "inactive")">
                        @status.GetDisplayText()
                    </td>
                    <td class="@(balanceStatus == BalanceStatus.Balanced ? "active" : "inactive")">
                        @balanceStatus.GetDisplayText()
                    </td>
                    <td width="5%">

                        <div style="border-bottom: 1px dashed #7368e3; padding-bottom: 4px; margin-bottom: 10px;">

                            @Html.ActionLink( "Details", "PoolingAgentDataDetails", new { id = item.Id }, new { @class = "info", @data_details = "1", @data_id = item.Id, @data_target = ".tr-" + item.Id + "-item" } )

                        </div>

                        @Html.ActionLink( "Allocate", "AllocatePoolingAgentData", new { id = item.Id, returnView = "PoolingAgentData" }, new { @class = "edit", @data_edit = "1", @data_id = item.Id, @data_target = ".tr-" + item.Id + "-item" } )

                        @if ( postingType == PostingType.Manual )
                        {
                            @*<div style="border-bottom: 1px dashed #7368e3; padding-bottom: 4px; margin-bottom: 10px;">

                                    @Html.ActionLink( "Edit", "EditPoolingAgentData", new { id = item.Id, returnView = "PoolingAgentData" }, new { @class = "edit", @data_edit = "1", @data_id = item.Id, @data_target = ".tr-" + item.Id + "-item", @style = "margin-right: 0;" } )

                                    @Html.ActionLink( enable, "DeletePoolingAgentData", new { id = item.Id }, new { @class = "warn", @data_delete = "1", @data_id = item.Id, @data_target = "#tr-" + item.Id + "-item", @data_refresh_target = "#poolingagentdata", @rel = "tipsyE", @title = enable + " this item?", @style = "margin-left: 0;" } )

                                </div>*@
                        }

                    </td>

                </tr>

                count++;
            }
        }
    </tbody>

</table>

@Html.Partial( "_Paging" )

