@model RegisterViewModel

@using ACT.Core.Enums;
@using ACT.UI.Models;

@{
    ViewBag.Title = "Register";

    VariableExtension.SetRules();
}

<div style="width: 76%; margin: 0 auto; position: relative;">

    <div class="left" style="width: 20%;">
        <img alt="" src="@Url.Content("~/Images/act-logo.png")" style="width: 100%;" />
    </div>

    <div class="right" style="text-transform: uppercase; margin-top: 5%;">
        <strong style="display: block; color: #012d71; font-size: 20px;">Register</strong>
    </div>

    <div class="clear"></div>

</div>

<div class="sign-in" style="width: 70%;">

    <div class="details">

        @using ( Html.BeginForm( "Register", "Account", new { }, FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return ACT.UI.DataValidateForm($(this));" } ) )
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary( true )

            <div class="left" style="width: 48%; margin-right: 4%;">

                <div class="editor-label uppercase">
                    @Html.LabelFor( model => model.CompanyName )
                </div>

                <div class="editor-field">
                    @Html.TextBoxFor( model => model.CompanyName, new { @class = "input", @placeholder = "Enter your Company Name" } )
                    @Html.ValidationMessageFor( model => model.CompanyName )
                </div>

                <div class="editor-label uppercase">
                    @Html.LabelFor( model => model.TradingAs )
                </div>

                <div class="editor-field">
                    @Html.TextBoxFor( model => model.TradingAs, new { @class = "input", @placeholder = "Enter your Company Trading Name" } )
                    @Html.ValidationMessageFor( model => model.TradingAs )
                </div>

                <div class="editor-label uppercase">
                    @Html.LabelFor( model => model.Description )
                </div>

                <div class="editor-field">
                    @Html.TextAreaFor( model => model.Description, new { @class = "input", @style = "height: 81px;", @placeholder = "Briefely describe your business" } )
                    @Html.ValidationMessageFor( model => model.Description )
                </div>

                <div class="editor-label uppercase" style="margin-bottom: 10px;">
                    @Html.LabelFor( model => model.ServiceType )
                </div>

                <div class="editor-field">
                    @foreach ( int k in Enum.GetValues( typeof( ServiceType ) ) )
                    {
                        if ( k < 0 )
                        {
                            continue;
                        }

                        string desc = ( ( ServiceType ) k ).GetDisplayText();

                        <label class="block" for="ServiceType-@k">

                            <input id="ServiceType-@k" name="ServiceType" type="radio" value="@k" data-service-type="1" data-target="#psp-list" />

                            @desc

                        </label>
                        <div></div>
                    }
                </div>

                <div id="psp-list" class="none grouped-area" style="margin-top: 20px;">

                    <div class="editor-label uppercase">
                        @Html.LabelFor( model => model.PSPId )
                    </div>

                    <div class="editor-field">
                        @Html.DropDownListFor( model => model.PSPId, model => Model.PSPOptions, p => p.Id, p => p.CompanyName, false, new { @class = "chzn", @style = "width: 98%;" } )
                    </div>

                </div>

            </div>

            <div class="left" style="width: 48%;">

                <div class="editor-label uppercase">
                    @Html.LabelFor( model => model.CompanyRegistrationNumber )
                </div>

                <div class="editor-field">
                    @Html.TextBoxFor( model => model.CompanyRegistrationNumber, new { @class = "input", @placeholder = "Enter your Company Registration Number" } )
                    @Html.ValidationMessageFor( model => model.CompanyRegistrationNumber )
                </div>

                <div class="editor-label uppercase">
                    @Html.LabelFor( model => model.RegistrationFile )
                </div>

                <div class="editor-field" style="margin-bottom: 10px;">

                    <input id="RegistrationFile.File" name="RegistrationFile.File" type="file" value="" required="required" data-val-file="1" class="input" />
                    <input id="RegistrationFile.Name" name="RegistrationFile.Name" type="hidden" value="Company Registration File" />
                    <input id="RegistrationFile.Description" name="RegistrationFile.Description" class="input" type="hidden" value="Company Registration File" />

                    @Html.ValidationMessageFor( model => model.RegistrationFile )

                </div>

                <div class="editor-label uppercase">
                    @Html.LabelFor( model => model.VATNumber )
                </div>

                <div class="editor-field">
                    @Html.TextBoxFor( model => model.VATNumber, new { @class = "input", @placeholder = "Enter your VAT Number" } )
                    @Html.ValidationMessageFor( model => model.VATNumber )
                </div>

                <div class="editor-label uppercase">
                    @Html.LabelFor( model => model.ContactPerson )
                </div>

                <div class="editor-field">
                    @Html.TextBoxFor( model => model.ContactPerson, new { @class = "input", @placeholder = "Enter your Contact Person's Full Name" } )
                    @Html.ValidationMessageFor( model => model.ContactPerson )
                </div>

                <div class="editor-label uppercase">
                    @Html.LabelFor( model => model.ContactNumber )
                </div>

                <div class="editor-field">
                    @Html.TextBoxFor( model => model.ContactNumber, new { @class = "input", @placeholder = "Enter your Contact Number" } )
                    @Html.ValidationMessageFor( model => model.ContactNumber )
                </div>

                <div class="editor-label uppercase">
                    @Html.LabelFor( model => model.EmailAddress )
                </div>

                <div class="editor-field">
                    @Html.TextBoxFor( model => model.EmailAddress, new { @class = "input", @placeholder = "Enter your Email Address" } )
                    @Html.ValidationMessageFor( model => model.EmailAddress )
                </div>

                <div class="editor-label uppercase">
                    @Html.LabelFor( model => model.AdminEmail )
                </div>

                <div class="editor-field">
                    @Html.TextBoxFor( model => model.AdminEmail, new { @class = "input", @placeholder = "Enter your Administrator Email Address" } )
                    @Html.ValidationMessageFor( model => model.AdminEmail )
                </div>

            </div>

            <div class="clear" style="border-bottom: 1px dashed #ccc; margin-bottom: 20px; height: 0;">&nbsp;</div>

            <div class="editor-label" style="margin-bottom: 10px;">
                @Html.LabelFor( model => model.EstimatedLoad )
            </div>

            <div class="editor-field">

                <table id="EstimatedLoad-table" class="da-table" style="border-bottom: 0;">

                    <thead>
                        <tr>
                            <th>Jan</th>
                            <th>Feb</th>
                            <th>Mar</th>
                            <th>Apr</th>
                            <th>May</th>
                            <th>Jun</th>
                            <th>Jul</th>
                            <th>Aug</th>
                            <th>Sep</th>
                            <th>Oct</th>
                            <th>Nov</th>
                            <th>Dec</th>
                        </tr>
                    </thead>

                    <tbody>
                        <tr>
                            <td>
                                <input id="EstimatedLoad.January" name="EstimatedLoad.January" type="number" value="" placeholder="E.g 10" style="padding: 0 5px;width: 87%;" />
                            </td>
                            <td>
                                <input id="EstimatedLoad.February" name="EstimatedLoad.February" type="number" value="" placeholder="E.g 20" style="padding: 0 5px;width: 87%;" />
                            </td>
                            <td>
                                <input id="EstimatedLoad.March" name="EstimatedLoad.March" type="number" value="" placeholder="E.g 30" style="padding: 0 5px;width: 87%;" />
                            </td>
                            <td>
                                <input id="EstimatedLoad.April" name="EstimatedLoad.April" type="number" value="" placeholder="E.g 40" style="padding: 0 5px;width: 87%;" />
                            </td>
                            <td>
                                <input id="EstimatedLoad.May" name="EstimatedLoad.May" type="number" value="" placeholder="E.g 50" style="padding: 0 5px;width: 87%;" />
                            </td>
                            <td>
                                <input id="EstimatedLoad.June" name="EstimatedLoad.June" type="number" value="" placeholder="E.g 60" style="padding: 0 5px;width: 87%;" />
                            </td>
                            <td>
                                <input id="EstimatedLoad.July" name="EstimatedLoad.July" type="number" value="" placeholder="E.g 70" style="padding: 0 5px;width: 87%;" />
                            </td>
                            <td>
                                <input id="EstimatedLoad.August" name="EstimatedLoad.August" type="number" value="" placeholder="E.g 80" style="padding: 0 5px;width: 87%;" />
                            </td>
                            <td>
                                <input id="EstimatedLoad.September" name="EstimatedLoad.September" type="number" value="" placeholder="E.g 45" style="padding: 0 5px;width: 87%;" />
                            </td>
                            <td>
                                <input id="EstimatedLoad.October" name="EstimatedLoad.October" type="number" value="" placeholder="E.g 15" style="padding: 0 5px;width: 87%;" />
                            </td>
                            <td>
                                <input id="EstimatedLoad.November" name="EstimatedLoad.November" type="number" value="" placeholder="E.g 25" style="padding: 0 5px;width: 87%;" />
                            </td>
                            <td>
                                <input id="EstimatedLoad.December" name="EstimatedLoad.December" type="number" value="" placeholder="E.g 35" style="padding: 0 5px;width: 87%;" />
                            </td>
                        </tr>
                    </tbody>

                </table>

            </div>

            <div class="clear" style="border-bottom: 1px dashed #ccc; margin-bottom: 10px; height: 20px;">&nbsp;</div>

            <p>
                <strong class="uppercase">Your Address</strong>
            </p>

            <div class="left" style="width: 48%; margin-right: 4%;">

                <input id="Address.AddressType" name="Address.AddressType" type="hidden" value="@( ( int ) AddressType.Postal )" />

                <div class="editor-label">
                    @Html.LabelFor( model => model.Address.AddressLine1 )
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor( model => model.Address.AddressLine1, new { @class = "input", @placeholder = "Enter your Company Address Line 1" } )
                    @Html.ValidationMessageFor( model => model.Address.AddressLine1 )
                </div>

                <div class="editor-label">
                    @Html.LabelFor( model => model.Address.Town )
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor( model => model.Address.Town, new { @class = "input", @placeholder = "Enter your Company Address Town" } )
                    @Html.ValidationMessageFor( model => model.Address.Town )
                </div>

                <div class="editor-label">
                    @Html.LabelFor( model => model.Address.PostCode )
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor( model => model.Address.PostCode, new { @class = "input", @placeholder = "Enter your Company Address Postal Code" } )
                    @Html.ValidationMessageFor( model => model.Address.PostCode )
                </div>

            </div>

            <div class="left" style="width: 48%;">

                <div class="editor-label">
                    @Html.LabelFor( model => model.Address.AddressLine2 )
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor( model => model.Address.AddressLine2, new { @class = "input", @placeholder = "Enter your Company Address Line 2" } )
                    @Html.ValidationMessageFor( model => model.Address.AddressLine2 )
                </div>

                <div class="editor-label">
                    @Html.LabelFor( model => model.Address.Province )
                </div>
                <div class="editor-field">

                    <select id="Address.Province" name="Address.Province" class="chzn" required="required" style="width: 100%;">
                        <option value="">-- select</option>
                        @foreach ( int p in Enum.GetValues( typeof( Province ) ) )
                        {
                            string text = ( ( Province ) p ).GetDisplayText();

                            if ( text.ToLower() == "all" )
                            {
                                continue;
                            }

                            <option value="@p">@text</option>
                        }
                    </select>

                    @Html.ValidationMessageFor( model => model.Address.Province )
                </div>

            </div>

            <div class="clear" style="border-bottom: 1px dashed #ccc; margin-bottom: 10px; height: 20px;">&nbsp;</div>

            <p>
                <label>
                    <input id="IsAccpetedTC" name="IsAccpetedTC" type="checkbox" value="True" />
                    I accept the <a id="tnc-link" href="/@VariableExtension.SystemRules.PlatformTnCDocumentUrl" target="_blank">Terms and Conditions</a> for registering with ACT Pallet Solutions
                </label>

                <input id="ClientTnCDocumentUrl" type="hidden" value="/@VariableExtension.SystemRules.ClientTnCDocumentUrl" />
                <input id="PlatformTnCDocumentUrl" type="hidden" value="/@VariableExtension.SystemRules.PlatformTnCDocumentUrl" />
            </p>

            <p style="margin: 0;">
                <input type="submit" value="Submit" style="display: inline;" />

                <span style="padding: 0 2px;">|</span>

                @Html.ActionLink( "Sign In", "Login", new { }, new { @class = "uppercase" } )

                <span style="padding: 0 2px;">|</span>

                @Html.ActionLink( "Forgot Password", "ForgotPassword", new { }, new { @class = "uppercase" } )
            </p>
        }

    </div>

    <div class="clear"></div>

</div>
