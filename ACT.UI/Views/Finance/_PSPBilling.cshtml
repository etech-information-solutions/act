
@model PagingExtension

@using ACT.Core.Enums;
@using ACT.Core.Models.Custom;
@using ACT.Core.Models;


@{
    ViewBag.ShowExport = true;
    ViewBag.ShowCustom = true;
    ViewBag.ViewName = "_PSPBilling";
}


@Html.Partial("_Notification")

@{
    UserModel user = User.Get();

    int count = Model.Start;
    List<PSPBillingCustomModel> items = (List<PSPBillingCustomModel>)Model.Items;
}

@if (Model == null || !items.Any())
{
    <div class="notification message-warn" style="margin-bottom: 20px;">
        There are no Billing items available matching your search criteria.
    </div>
}


@if (user.IsAdmin || user.IsPSPAdmin)
{
<p>
    @Html.ActionLink("Add PSP Billing", "AddPSPBilling", new { }, new { @class = "add", @rel = "tipsyS", @title = "Add a new Billing Record?", @data_edit = "1", @data_id = 0, @data_target = "#pspbilling" })
    <span class="loader"></span>

    @Html.ActionLink("Process All Billing", "ProcessAllPSPBilling", new { }, new { @class = "add", @rel = "tipsyS", @title = "Add all new Billing Record?", @data_edit = "1", @data_id = 0, @data_target = "#pspbilling" })
    <span class="loader"></span>

    @*@Html.ActionLink("Generate Invoice", "GetInvoice", new { }, new { @class = "add", @rel = "tipsyS", @title = "Show a new invoice record?", @data_edit = "1", @data_id = 0, @data_target = "#pspbilling" })
    <span class="loader"></span>

    @Html.ActionLink("Generate Client Invoice", "GetClientInvoice", new { }, new { @class = "add", @rel = "tipsyS", @title = "Show a new invoice record?", @data_edit = "1", @data_id = 0, @data_target = "#pspbilling" })
    <span class="loader"></span>

    @Html.ActionLink("Xero Interface", "PSPBilling", new { }, new { @class = "add", @rel = "tipsyS", @title = "Add a new Billing Record?", @data_edit = "1", @data_id = 0, @data_target = "#pspbilling" })
    <span class="loader"></span>*@
</p>
}




<table id="pspbilling-table" class="da-table datatable-numberpaging sort fixed-header" data-fixed-header-target="#pspbilling-table_wrapper" data-starting-point=".ap-tabs ul">

    <thead>
        <tr>
            @*<th data-name="Count">
                #
            </th>*@
            <th data-name="StatementDate" data-column="StatementDate">
                Statement Date
            </th>
            <th data-name="StatementNumber" data-column="StatementNumber">
                Statement #
            </th>
            <th data-name="PSPId" data-column="PSPId">
                PSP
            </th>
            <th data-name="ClientId" data-column="ClientId">
                Client
            </th>
            <th data-name="PSPProductId" data-column="PSPProductId">
                Product
            </th>
            <th data-name="PaymentAmount" data-column="PaymentAmount">
                Statement Amount
            </th>
            <th data-name="InvoiceAmount" data-column="InvoiceAmount">
                Invoice Amount
            </th>
            <th data-name="TaxAmount" data-column="TaxAmount">
                Tax Amount
            </th>
            <th data-name="PaymentDate" data-column="PaymentDate">
                Payment Date
            </th>
            <th data-name="ReferenceNumber" data-column="ReferenceNumber">
                Ref #
            </th>
            <th data-name="NominatedAccount" data-column="NominatedAccount">
                Nominated Account
            </th>
            <th data-name="Actions">
                Actions
            </th>
        </tr>
    </thead>

    <tbody>
        @if (Model != null && items != null && items.Count() > 0)
            {

                foreach (var item in items)
                {
                    Status status = (Status)item.Status;

                    string active = (status == Status.Active) ? "active" : "inactive";
                    string enable = (status == Status.Active) ? "Disable" : "Enable";
                    string pending = (status == Status.Pending) ? "Pending" : "Enable";

        <tr id="tr-@item.Id-item" class="tr-@item.Id-item">

            @*<td width="1%">
            @count
        </td>*@
            <td>
                @( item.StatementDate?.ToString( "yyyy-MM-dd" ) )

                <a class="block" rel="tipsyE" title="Review audit log" data-audit-log="1" data-pid="@item.Id" data-type="PSPBilling">
                    <img alt="" src="@Url.Content( "~/Images/duplicate-content.png" )" style="max-width: 15px;" />
                    <span></span>
                </a>
            </td>
            <td> @item.StatementNumber  </td>
            <td> @item.PSPName </td>
            <td> @item.ClientName    </td>
            <td>@item.ProductName</td>
            <td>
                @(item.PaymentAmount?.ToString( "C", System.Globalization.CultureInfo.CreateSpecificCulture( "en-ZA" ) ))
            </td>
            <td>
                @(item.InvoiceAmount.ToString( "C", System.Globalization.CultureInfo.CreateSpecificCulture( "en-ZA" ) ))
            </td>
            <td>
                @(item.TaxAmount?.ToString( "C", System.Globalization.CultureInfo.CreateSpecificCulture( "en-ZA" ) ))
            </td>
            <td>
                @( item.PaymentDate?.ToString( "yyyy-MM-dd" ) )
            </td>
            <td>
                @item.ReferenceNumber
            </td>
            <td>
                @item.NominatedAccount
            </td>
            
            <td width="16%">
                @Html.ActionLink("Details", "PSPBillingDetails", new { id = item.Id }, new { @class = "info", @data_details = "1", @data_id = item.Id, @data_target = ".tr-" + item.Id + "-item" })

                @Html.ActionLink("Edit", "EditPSPBilling", new { id = item.Id, returnView = "PSPBilling" }, new { @class = "edit", @data_edit = "1", @data_id = item.Id, @data_target = ".tr-" + item.Id + "-item" })


                @Html.ActionLink("ProcessPayment", "ProcessPSPBilling", new { id = item.Id, returnView = "PSPBilling" }, new { @class = "edit", @data_edit = "1", @data_id = item.Id, @data_target = ".tr-" + item.Id + "-item" })

                @Html.ActionLink("Generate Invoice", "GetInvoice", new { id = item.Id, returnView = "PSPBilling" }, new { @class = "edit", @data_edit = "1", @data_id = item.Id, @data_target = ".tr-" + item.Id + "-item" })

                @Html.ActionLink("Generate Client Invoice", "GetClientInvoice", new { id = item.Id, returnView = "PSPBilling" }, new { @class = "edit", @data_edit = "1", @data_id = item.Id, @data_target = ".tr-" + item.Id + "-item" })

                @Html.ActionLink(enable, "DeletePSPBilling", new { id = item.Id }, new { @class = "warn", @data_delete = "1", @data_id = item.Id, @data_target = "#tr-" + item.Id + "-item", @data_refresh_target = "#pspbilling", @rel = "tipsyE", @title = enable + " this item?" })
            </td>

        </tr>

                count++;
            }
        }
    </tbody>

</table>

@*@Html.Partial( "_BillingCustomSearch", new ACT.Core.Models.CustomSearchModel() )*@

@Html.Partial("_Paging")