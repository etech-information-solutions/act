@model PSPViewModel

@using ACT.UI.Models;
@using ACT.Core.Enums;

@{
    if (ViewBag.IncludeLayout == null)
    {
        Layout = null;
    }

    ViewBag.Title = "Edit";
}


@Html.Partial("_Notification")

@using (Html.BeginForm("EditPSP", "Administration", FormMethod.Post, new { enctype = "multipart/form-data", @data_ajax_form = "1", @data_target = "#psps", @class = "custom-validate", @style = "width: auto;" }))
{
    <div id="edit-item">

        <h2 class="uppercase" style="width: auto;">
            <img alt="" src="@Url.Content( "~/images/edit.png" )" />
            <span>Edit PSP</span>
        </h2>

        @Html.ValidationSummary(true)

        @Html.HiddenFor(model => model.Id)

        <div id="item-details" class="item-details" style="width: auto;">

            <div class="left" style="width: 48%; margin-right: 4%;">

                <div class="editor-label uppercase">
                    @Html.LabelFor(model => model.CompanyName)
                </div>

                <div class="editor-field">
                    @Html.TextBoxFor(model => model.CompanyName, new { @class = "input", @placeholder = "Enter Company Name" })
                    @Html.ValidationMessageFor(model => model.CompanyName)
                </div>

                <div class="editor-label uppercase">
                    @Html.LabelFor(model => model.TradingAs)
                </div>

                <div class="editor-field">
                    @Html.TextBoxFor(model => model.TradingAs, new { @class = "input", @placeholder = "Enter Company Trading Name" })
                    @Html.ValidationMessageFor(model => model.TradingAs)
                </div>

                <div class="editor-label uppercase">
                    @Html.LabelFor(model => model.VATNumber)
                </div>

                <div class="editor-field">
                    @Html.TextBoxFor(model => model.VATNumber, new { @class = "input", @placeholder = "Enter VAT Number" })
                    @Html.ValidationMessageFor(model => model.VATNumber)
                </div>

                <div class="editor-label uppercase">
                    @Html.LabelFor(model => model.Description)
                </div>

                <div class="editor-field">
                    @Html.TextAreaFor(model => model.Description, new { @class = "input", @style = "height: 81px; width: 93%;", @placeholder = "Briefely describe this PSP" })
                    @Html.ValidationMessageFor(model => model.Description)
                </div>

                <div class="editor-label uppercase" style="margin-bottom: 10px;">
                    @Html.LabelFor(model => model.ServiceType)
                </div>

                <div class="editor-field">
                    @foreach (int k in Enum.GetValues(typeof(ServiceType)))
                    {
                        ServiceType serviceType = (ServiceType)k;

                        if (k < 0 || serviceType == ServiceType.ManageOwnPallets || serviceType == ServiceType.ProvidePalletManagement)
                        {
                            continue;
                        }

                        string desc = ((ServiceType)k).GetDisplayText();

                        string chk = (serviceType == Model.ServiceType) ? "checked=checked" : string.Empty;

                        <label class="block" for="ServiceType-@k">

                            <input id="ServiceType-@k" name="ServiceType" type="radio" value="@k" data-service-type="1" data-target="#psp-list" @chk />

                            @desc

                        </label>
                        <div></div>
                    }
                    @Html.ValidationMessageFor(model => model.ServiceType)
                </div>

            </div>

            <div class="left" style="width: 48%;">

                <div class="editor-label uppercase">
                    @Html.LabelFor(model => model.CompanyRegistrationNumber)
                </div>

                <div class="editor-field">
                    @Html.TextBoxFor(model => model.CompanyRegistrationNumber, new { @class = "input", @placeholder = "Enter Company Registration Number" })
                    @Html.ValidationMessageFor(model => model.CompanyRegistrationNumber)
                </div>

                <div class="editor-label uppercase">
                    @Html.LabelFor(model => model.RegistrationFile)
                </div>

                <div class="editor-field" style="margin-bottom: 10px;">

                    @if (Model.RegistrationFile != null && Model.RegistrationFile.Id > 0)
                    {
                        @Html.HiddenFor(model => model.RegistrationFile.Id)

                        <div style="border: 1px dashed #002e70; border-radius: 4px; padding: 4px; margin-bottom: 20px; width: 94%;">

                            <a target="_blank" href="@Url.Action( "ViewDocument", "Administration", new { @id = Model.RegistrationFile.Id } )">
                                <img alt="download" src="@Url.Content( "~/Images/download.png" )" style="margin-bottom: 2px;" />

                                @Model.RegistrationFile.Name (@Model.RegistrationFile.Extension)
                            </a>

                        </div>
                    }

                    <input id="RegistrationFile.File" name="RegistrationFile.File" type="file" value="" data-val-file="1" class="input" />
                    <input id="RegistrationFile.Name" name="RegistrationFile.Name" type="hidden" value="Company Registration File" />
                    <input id="RegistrationFile.Description" name="RegistrationFile.Description" class="input" type="hidden" value="Company Registration File" />

                    @Html.ValidationMessageFor(model => model.RegistrationFile)

                </div>

                <div class="editor-label uppercase">
                    @Html.LabelFor(model => model.ContactPerson)
                </div>

                <div class="editor-field">
                    @Html.TextBoxFor(model => model.ContactPerson, new { @class = "input", @placeholder = "Enter Contact Person's Full Name" })
                    @Html.ValidationMessageFor(model => model.ContactPerson)
                </div>

                <div class="editor-label uppercase">
                    @Html.LabelFor(model => model.ContactNumber)
                </div>

                <div class="editor-field">
                    @Html.TextBoxFor(model => model.ContactNumber, new { @class = "input", @placeholder = "Enter Contact Number" })
                    @Html.ValidationMessageFor(model => model.ContactNumber)
                </div>

                <div class="editor-label uppercase">
                    @Html.LabelFor(model => model.EmailAddress)
                </div>

                <div class="editor-field">
                    @Html.TextBoxFor(model => model.EmailAddress, new { @class = "input", @placeholder = "Enter Email Address" })
                    @Html.ValidationMessageFor(model => model.EmailAddress)
                </div>

                <div class="editor-label uppercase">
                    @Html.LabelFor(model => model.AdminEmail)
                </div>

                <div class="editor-field">
                    @Html.TextBoxFor(model => model.AdminEmail, new { @class = "input", @placeholder = "Enter Administrator Email Address" })
                    @Html.ValidationMessageFor(model => model.AdminEmail)
                </div>

            </div>

            <div class="clear" style="border-bottom: 1px dashed #ccc; margin-bottom: 20px; height: 0;">&nbsp;</div>
            <div class="budgets">
                <div class="editor-label" style="margin-bottom: 10px;">
                    @Html.LabelFor(model => model.PSPBudget)
                </div>

                <div class="editor-field">
                    <a id="addrow" href="#" onclick="AddRow();"><i class="fa fa-plus"></i> Add New</a>
                    @*@Html.HiddenFor(model => model.PSPBudget.Id)*@

                    <table id="PSPBudget-table" class="da-table" style="border-bottom: 0;">

                        <thead>
                            <tr>
                                <th>Year</th>
                                <th>Jan</th>
                                <th>Feb</th>
                                <th>Mar</th>
                                <th>Apr</th>
                                <th>May</th>
                                <th>Jun</th>
                                <th>Jul</th>
                                <th>Aug</th>
                                <th>Sep</th>
                                <th>Oct</th>
                                <th>Nov</th>
                                <th>Dec</th>
                            </tr>
                        </thead>

                        <tbody>
                            @*<tr>
                    <td>
                        @Html.TextBoxFor(model => model.PSPBudget.January, new { @class = "input", @type = "number", @style = "padding: 0 5px; width: 87%;", @placeholder = "E.g 10" })
                    </td>
                    <td>
                        @Html.TextBoxFor(model => model.PSPBudget.February, new { @class = "input", @type = "number", @style = "padding: 0 5px; width: 87%;", @placeholder = "E.g 20" })
                    </td>
                    <td>
                        @Html.TextBoxFor(model => model.PSPBudget.March, new { @class = "input", @type = "number", @style = "padding: 0 5px; width: 87%;", @placeholder = "E.g 30" })
                    </td>
                    <td>
                        @Html.TextBoxFor(model => model.PSPBudget.April, new { @class = "input", @type = "number", @style = "padding: 0 5px; width: 87%;", @placeholder = "E.g 40" })
                    </td>
                    <td>
                        @Html.TextBoxFor(model => model.PSPBudget.May, new { @class = "input", @type = "number", @style = "padding: 0 5px; width: 87%;", @placeholder = "E.g 50" })
                    </td>
                    <td>
                        @Html.TextBoxFor(model => model.PSPBudget.June, new { @class = "input", @type = "number", @style = "padding: 0 5px; width: 87%;", @placeholder = "E.g 60" })
                    </td>
                    <td>
                        @Html.TextBoxFor(model => model.PSPBudget.July, new { @class = "input", @type = "number", @style = "padding: 0 5px; width: 87%;", @placeholder = "E.g 70" })
                    </td>
                    <td>
                        @Html.TextBoxFor(model => model.PSPBudget.August, new { @class = "input", @type = "number", @style = "padding: 0 5px; width: 87%;", @placeholder = "E.g 80" })
                    </td>
                    <td>
                        @Html.TextBoxFor(model => model.PSPBudget.September, new { @class = "input", @type = "number", @style = "padding: 0 5px; width: 87%;", @placeholder = "E.g 45" })
                    </td>
                    <td>
                        @Html.TextBoxFor(model => model.PSPBudget.October, new { @class = "input", @type = "number", @style = "padding: 0 5px; width: 87%;", @placeholder = "E.g 15" })
                    </td>
                    <td>
                        @Html.TextBoxFor(model => model.PSPBudget.November, new { @class = "input", @type = "number", @style = "padding: 0 5px; width: 87%;", @placeholder = "E.g 25" })
                    </td>
                    <td>
                        @Html.TextBoxFor(model => model.PSPBudget.December, new { @class = "input", @type = "number", @style = "padding: 0 5px; width: 87%;", @placeholder = "E.g 35" })
                    </td>
                </tr>*@
                        </tbody>

                    </table>

                </div>
                </div>

                <div class="clear" style="border-bottom: 1px dashed #ccc; margin-bottom: 10px; height: 20px;">&nbsp;</div>

                <p>
                    <strong class="uppercase">Address Details</strong>
                </p>

                <div class="left" style="width: 48%; margin-right: 4%;">

                    @Html.HiddenFor(model => model.Address.Id)
                    @Html.HiddenFor(model => model.Address.AddressType)

                    <div class="editor-label">
                        @Html.LabelFor(model => model.Address.AddressLine1)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.Address.AddressLine1, new { @class = "input", @placeholder = "Enter Company Address Line 1" })
                        @Html.ValidationMessageFor(model => model.Address.AddressLine1)
                    </div>

                    <div class="editor-label">
                        @Html.LabelFor(model => model.Address.Town)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.Address.Town, new { @class = "input", @placeholder = "Enter Company Address Town" })
                        @Html.ValidationMessageFor(model => model.Address.Town)
                    </div>

                    <div class="editor-label">
                        @Html.LabelFor(model => model.Address.PostCode)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.Address.PostCode, new { @class = "input", @placeholder = "Enter Company Address Postal Code" })
                        @Html.ValidationMessageFor(model => model.Address.PostCode)
                    </div>

                </div>

                <div class="left" style="width: 48%;">

                    <div class="editor-label">
                        @Html.LabelFor(model => model.Address.AddressLine2)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.Address.AddressLine2, new { @class = "input", @placeholder = "Enter Company Address Line 2" })
                        @Html.ValidationMessageFor(model => model.Address.AddressLine2)
                    </div>

                    <div class="editor-label">
                        @Html.LabelFor(model => model.Address.Province)
                    </div>
                    <div class="editor-field">

                        <select id="Address.Province" name="Address.Province" class="chzn" required="required" style="width: 100%;">
                            <option value="">-- select</option>
                            @foreach (int p in Enum.GetValues(typeof(Province)))
                            {
                                Province province = (Province)p;

                                string text = province.GetDisplayText();

                                if (text.ToLower() == "all")
                                {
                                    continue;
                                }

                                string sel = (province == Model.Address.Province) ? "selected=selected" : string.Empty;

                                <option value="@p" @sel>@text</option>
                            }
                        </select>

                        @Html.ValidationMessageFor(model => model.Address.Province)
                    </div>

                </div>

                <div class="clear" style="border-bottom: 1px dashed #ccc; margin-bottom: 20px;">&nbsp;</div>

                <p>
                    <input id="save-btn" type="submit" value="Save" />

                    <span style="padding: 0 5px;">/</span>

                    <a data-cancel="1" data-target="#edit-item" data-remove="tr.edit">Cancel</a>
                </p>

            </div>

        </div>

    <script>
        $(document).ready(function () {
            var cId = $("#Id").val();
            LoadBudgets(cId);
           // $(".budgets").hide();

        });

        function ViewBudget() {
           // $('.budgets').show();
        };

        function SaveBudget(id) {
            var cId = $("#Id").val();
            var data = {
                "Id": id, "PSPId": cId, "BudgetYear": $('#ClientBudget_' + id + '_BudgetYear').val(), "January": $('#ClientBudget_' + id + '_January').val(), "February": $('#ClientBudget_' + id + '_February').val(), "March": $('#ClientBudget_' + id + '_March').val(), "April": $('#ClientBudget_' + id + '_April').val(), "May": $('#ClientBudget_' + id + '_May').val(), "June": $('#ClientBudget_' + id + '_June').val(), "July": $('#ClientBudget_' + id + '_July').val(), "August": $('#ClientBudget_' + id + '_August').val(), "September": $('#ClientBudget_' + id + '_September').val(), "October": $('#ClientBudget_' + id + '_October').val(), "November": $('#ClientBudget_' + id + '_November').val(), "December": $('#ClientBudget_' + id + '_December').val()
            };
            $.ajax({
                type: 'POST',
                url: "SetPSPBudget",
                data: data,//$(this).serialize(),
                success: function (response) {
                    if (response == "True") {
                        alert('Budget Saved.');
                    } else {
                        alert('Budget could not be saved. Try again.');
                    }
                }
            });


        }

        function AddRow() {
            var rowDiv = $("#PSPBudget-table tbody");
            //var fieldcopy = '<input class="input" id="ClientBudget_0-[FIELDNAME]-" style="padding: 0 5px; width: 87%;" type="number" value="0">';
            var fieldvalue = "0";
            var savecopy = '<a id="savebudget" onclick="SaveBudget(' + fieldvalue + ')" name="savebudget"><i class="fa fa-save"></i></a>';
            var tabledata = '<tr id="budg-0-row" name="budg-0-row">';//<form id="budg-0-frm" name="budg-0-frm">
            tabledata += '<td><input class="input" id="ClientBudget_0_BudgetYear" style="padding: 0 5px; width: 87%;" type="number" value="' + fieldvalue + '"></td>';
            tabledata += '<td><input class="input" id="ClientBudget_0_January" style="padding: 0 5px; width: 87%;" type="number" value="' + fieldvalue + '"></td>';
            tabledata += '<td><input class="input" id="ClientBudget_0_February" style="padding: 0 5px; width: 87%;" type="number" value="' + fieldvalue + '"></td>';
            tabledata += '<td><input class="input" id="ClientBudget_0_March" style="padding: 0 5px; width: 87%;" type="number" value="' + fieldvalue + '"></td>';
            tabledata += '<td><input class="input" id="ClientBudget_0_April" style="padding: 0 5px; width: 87%;" type="number" value="' + fieldvalue + '"></td>';
            tabledata += '<td><input class="input" id="ClientBudget_0_May" style="padding: 0 5px; width: 87%;" type="number" value="' + fieldvalue + '"></td>';
            tabledata += '<td><input class="input" id="ClientBudget_0_June" style="padding: 0 5px; width: 87%;" type="number" value="' + fieldvalue + '"></td>';
            tabledata += '<td><input class="input" id="ClientBudget_0_July" style="padding: 0 5px; width: 87%;" type="number" value="' + fieldvalue + '"></td>';
            tabledata += '<td><input class="input" id="ClientBudget_0_August" style="padding: 0 5px; width: 87%;" type="number" value="' + fieldvalue + '"></td>';
            tabledata += '<td><input class="input" id="ClientBudget_0_September" style="padding: 0 5px; width: 87%;" type="number" value="' + fieldvalue + '"></td>';
            tabledata += '<td><input class="input" id="ClientBudget_0_October" style="padding: 0 5px; width:87%;" type="number" value="' + fieldvalue + '"></td>';
            tabledata += '<td><input class="input" id="ClientBudget_0_November" style="padding: 0 5px; width:87%;" type="number" value="' + fieldvalue + '"></td>';
            tabledata += '<td><input class="input" id="ClientBudget_0_December" style="padding: 0 5px; width: 87%;" type="number" value="' + fieldvalue + '"></td>';
            tabledata += '<td>' + savecopy.replace("[BUDGETID]", "0") + '</td>';
            tabledata += '</tr>';


            result = tabledata;

            rowDiv.append(result);

        }

        function LoadBudgets(id) {
            var rowDiv = $("#PSPBudget-table tbody");
            rowDiv.html('');


            var savecopy = '<a id="savebudget" onclick="SaveBudget([BUDGETID])" name="savebudget"><i class="fa fa-save"></i></a>';
            $.ajax({
                type: "GET",
                url: "GetPSPBudgets",
                data: { PSPId: id },
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (data) {
                    var count = Object.keys(data).length;
                    var result = "";
                    if (count > 0) {
                        //var fieldcopy = '<input class="input" id="ClientBudget_[FIELDNAME]-[FIELDVALUE]" style="padding: 0 5px; width: 87%;" type="number" value="[FIELDVALUE]">';
                        $.each(data, function (id, budget) {
                            var tabledata = '<tr id="budg-' + budget.Id + '-row" name="budg-' + budget.Id + '">';//<form id="budg-' + budget.Id + '-frm" name="budg-' + budget.Id + '-frm" >
                            tabledata += '<td><input class="input" id="ClientBudget_' + budget.Id + '_BudgetYear" style="padding: 0 5px; width: 87%;" type="number" value="' + budget.BudgetYear + '"></td>';
                            tabledata += '<td><input class="input" id="ClientBudget_' + budget.Id + '_January" style="padding: 0 5px; width: 87%;" type="number" value="' + budget.January + '"></td>';
                            tabledata += '<td><input class="input" id="ClientBudget_' + budget.Id + '_February" style="padding: 0 5px; width: 87%;" type="number" value="' + budget.February + '"></td>';
                            tabledata += '<td><input class="input" id="ClientBudget_' + budget.Id + '_March" style="padding: 0 5px; width: 87%;" type="number" value="' + budget.March + '"></td>';
                            tabledata += '<td><input class="input" id="ClientBudget_' + budget.Id + '_April" style="padding: 0 5px; width: 87%;" type="number" value="' + budget.April + '"></td>';
                            tabledata += '<td><input class="input" id="ClientBudget_' + budget.Id + '_May" style="padding: 0 5px; width: 87%;" type="number" value="' + budget.May + '"></td>';
                            tabledata += '<td><input class="input" id="ClientBudget_' + budget.Id + '_June" style="padding: 0 5px; width:87%;" type="number" value="' + budget.June + '"></td>';
                            tabledata += '<td><input class="input" id="ClientBudget_' + budget.Id + '_July" style="padding: 0 5px; width: 87%;" type="number" value="' + budget.July + '"></td>';
                            tabledata += '<td><input class="input" id="ClientBudget_' + budget.Id + '_August" style="padding: 0 5px; width: 87%;" type="number" value="' + budget.August + '"></td>';
                            tabledata += '<td><input class="input" id="ClientBudget_' + budget.Id + '_September" style="padding: 0 5px; width: 87%;" type="number" value="' + budget.September + '"></td>';
                            tabledata += '<td><input class="input" id="ClientBudget_' + budget.Id + '_October" style="padding: 0 5px; width: 87%;" type="number" value="' + budget.October + '"></td>';
                            tabledata += '<td><input class="input" id="ClientBudget_' + budget.Id + '_November" style="padding: 0 5px; width: 87%;" type="number" value="' + budget.November + '"></td>';
                            tabledata += '<td><input class="input" id="ClientBudget_' + budget.Id + '_December" style="padding: 0 5px; width: 87%;" type="number" value="' + budget.December + '"></td>';
                            //tabledata += '<td>' + fieldcopy.replace("[FIELDNAME]", "December").replace("[FIELDVALUE]", //budget.December) + '</td>';
                            tabledata += '<td>' + savecopy.replace("[BUDGETID]", budget.Id) + '</td>';
                            tabledata += '</tr>';
                            result += tabledata;
                        });

                    }

                    rowDiv.html(result);

                },
                error: function (response) {
                    alert('error');
                }
            });

        }

    </script>
}