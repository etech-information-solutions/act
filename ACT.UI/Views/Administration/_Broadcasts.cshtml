@model PagingExtension

@using ACT.Core.Models.Custom;
@using ACT.Core.Enums;
@using ACT.Core.Models;

@{
    ViewBag.ShowExport = true;
    ViewBag.ShowCustom = true;
    ViewBag.ViewName = "_Broadcasts";

    UserModel user = User.Get();
}


@Html.Partial( "_Notification" )

@{
    int count = Model.Start;
    List<BroadcastCustomModel> items = ( List<BroadcastCustomModel> ) Model.Items;
}

@if ( Model == null || !items.Any() )
{
    <div class="notification message-warn" style="margin-bottom: 20px;">
        There are no Broadcasts available matching your search criteria.
    </div>
}

<p>
    @Html.ActionLink( "Add Broadcast", "AddBroadcast", new { }, new { @class = "add", @rel = "tipsyS", @title = "Add a new Broadcast?", @data_edit = "1", @data_id = 0, @data_target = "#broadcasts" } )
    <span class="loader"></span>
</p>

<table id="broadcasts-table" class="da-table datatable-numberpaging sort fixed-header" data-fixed-header-target="#broadcasts-table_wrapper" data-starting-point=".ap-tabs ul">

    <thead>
        <tr>
            <th data-name="Count">
                #
            </th>
            <th data-name="CreatedOn" data-column="CreatedOn">
                Date
            </th>
            <th data-name="Owner">
                Owner
            </th>
            <th data-name="StartDate" data-column="StartDate">
                Starts
            </th>
            <th data-name="EndDate" data-column="EndDate">
                Ends
            </th>
            <th data-name="Status" data-column="Status">
                Status
            </th>
            <th data-name="xRead">
                x Read
            </th>
            <th data-name="Message" data-column="Message">
                Message
            </th>
            <th data-name="Actions">
                Actions
            </th>
        </tr>
    </thead>

    <tbody>
        @if ( Model != null && items != null && items.Count() > 0 )
        {
            foreach ( var item in items )
            {
                Status status = ( Status ) item.Status;

                string active = ( status == Status.Active ) ? "active" : "inactive";
                string enable = ( status == Status.Active ) ? "Disable" : "Enable";

                <tr id="tr-@item.Id-item" class="tr-@item.Id-item @active">

                    <td width="1%">
                        @count
                    </td>
                    <td>
                        @item.CreatedOn.ToString( "yyyy/MM/dd" )

                        <a class="block" rel="tipsyE" title="Review audit log" data-audit-log="1" data-pid="@item.Id" data-type="Broadcast">
                            <img alt="" src="@Url.Content( "~/Images/duplicate-content.png" )" style="max-width: 15px;" />
                            <span></span>
                        </a>
                    </td>
                    <td width="10%">
                        @if ( !string.IsNullOrEmpty( item.PSPName ) )
                        {
                            <b>@item.PSPName</b>
                        }
                        else if ( !string.IsNullOrEmpty( item.ClientName ) )
                        {
                            <b>@item.ClientName</b>
                        }
                        else
                        {
                            <span>General</span>
                        }
                    </td>
                    <td>
                        @item.StartDate.ToString( "yyyy/MM/dd" )
                    </td>
                    <td>
                        @(item.EndDate.HasValue ? item.EndDate.Value.ToString( "yyyy/MM/dd" ) : "-/-")
                    </td>
                    <td>
                        @status.GetDisplayText()
                    </td>
                    <td>
                        @item.XRead
                    </td>
                    <td width="40%" style="line-height: 15px;">
                        @Html.Raw( item.Message.Replace( "\n", "<br />" ) )
                    </td>
                    <td width="16%">
                        @Html.ActionLink( "Details", "BroadcastDetails", new { id = item.Id }, new { @class = "info", @data_details = "1", @data_id = item.Id, @data_target = ".tr-" + item.Id + "-item" } )

                        @Html.ActionLink( "Edit", "EditBroadcast", new { id = item.Id, returnView = "Broadcasts" }, new { @class = "edit", @data_edit = "1", @data_id = item.Id, @data_target = ".tr-" + item.Id + "-item" } )
                        @Html.ActionLink( enable, "DeleteBroadcast", new { id = item.Id }, new { @class = "warn", @data_delete = "1", @data_id = item.Id, @data_target = "#tr-" + item.Id + "-item", @data_refresh_target = "#broadcasts", @rel = "tipsyE", @title = enable + " this item?" } )
                    </td>

                </tr>

                count++;
            }
        }
    </tbody>

</table>

@Html.Partial( "_Paging" )