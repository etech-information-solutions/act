@model PSPProduct

@using ACT.Core.Enums;
@using ACT.Data.Models;

@{
    if (ViewBag.IncludeLayout == null)
    {
        Layout = null;
    }

    ViewBag.Title = "PSP Product Details";
}


<div id="item-details" class="item-details" style="width: auto;">

    @if (ViewBag.IncludeLayout == null)
    {
        <h2>
            <img alt="" src="@Url.Content( "~/images/info.png" )" />
            <span>PSP Product Details</span>
        </h2>
    }

    <div class="left" style="width: 25%; margin-right: 2%;">

        <div class="display-label">
            Date Created
        </div>
        <div class="display-field">
            @Model.CreatedOn
        </div>

        <div class="display-label">
            Product
        </div>
        <div class="display-field">
            @(Model.ProductId)
        </div>

        <div class="display-label">
            Name
        </div>
        <div class="display-field">
            @Html.DisplayFor(model => model.Name)
        </div>

        <div class="display-label">
            Description
        </div>
        <div class="display-field">
            @Html.DisplayFor(model => model.Description)
        </div>

        <div class="display-label">
            Start Date
        </div>
        <div class="display-field">
            @Html.DisplayFor(model => model.StartDate)
        </div>

        <div class="display-label">
            End Date
        </div>
        <div class="display-field">
            @Html.DisplayFor(model => model.EndDate)
        </div>

        <div class="display-label">
            Rate
        </div>
        <div class="display-field">
            @Html.DisplayFor(model => model.Rate)
        </div>

        <div class="display-label">
            Rate Unit
        </div>
        <div class="display-field">
            @*@Html.DisplayFor(model => model.RateUnit)*@
            @(( (RateUnit) Model.RateUnit).GetDisplayText())
        </div>

        <div class="display-label">
            Status
        </div>
        <div class="display-field">
            @Html.DisplayFor(model => model.Status)
        </div>

        <div class="display-label">
            ModifiedBy
        </div>
        <div class="display-field">
            @Html.DisplayFor(model => model.ModifiedBy)
        </div>

        <div class="display-label">
            ModifiedOn
        </div>
        <div class="display-field">
            @Html.DisplayFor(model => model.ModifiedOn)
        </div>

        <div class="display-label">
            Status
        </div>
        <div class="display-field">
            @(( ( Status ) Model.Status ).GetDisplayText())
        </div>
    </div>

    @*<div class="left" style="width: 73%;">

        <div id="contact-list">
            @Html.Partial("_ContactsView", (List<Contact>)ViewBag.Contacts)
        </div>
        <div id="vehicle-list">
            @Html.Partial("_VehiclesView", (List<Vehicle>)ViewBag.Vehicles)
        </div>*@

    </div>

    <div class="clear" style="border-bottom: 1px dashed #ccc; margin-bottom: 10px; height: 20px;">&nbsp;</div>

    @if (ViewBag.IncludeLayout == null)
    {
        <p>
            @Html.ActionLink("Edit", "EditPSPProduct", new { id = Model.Id }, new { @class = "edit", @data_edit = "1", @data_id = Model.Id, @data_target = "#tr-" + Model.Id + "-item" })

            @if (ViewBag.IncludeLayout == null)
            {
                <span style="padding: 0 5px;">/</span>
                <a data-cancel="1" data-target="#item-details" data-remove="tr.edit">Cancel</a>
            }
        </p>
    }

    @if (ViewBag.IncludeLayout != null)
    {
        <div class="back-to-list">
            @Html.ActionLink("Back to List", "Index")
        </div>
    }

</div>
