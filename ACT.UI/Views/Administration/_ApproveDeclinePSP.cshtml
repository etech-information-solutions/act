@model PSPViewModel

@using ACT.UI.Models;
@using ACT.Data.Models;
@using ACT.Core.Enums;


@Html.Partial( "_Notification" )

@using ( Html.BeginForm( "ApproveDeclinePSP", "Administration", FormMethod.Post, new { enctype = "multipart/form-data", @data_ajax_form = "1", @data_target = "#psps", @class = "custom-validate", @style = "width: auto;" } ) )
{
    string logoUrl = ( Model.Files.NullableAny( d => d.Name.ToLower() == "logo" ) ) ? Url.Action( "ViewDocument", new { id = Model.Files.FirstOrDefault( d => d.Name.ToLower() == "logo" ).Id } ) : Url.Content( "~/Images/no-preview.png" );

    <div id="edit-item">

        <h2 class="uppercase" style="width: auto; margin-top: 10px;">
            <img alt="" src="@Url.Content( "~/images/thumbs-up.png" )" style="margin-bottom: 2px; margin-right: 5px;" />

            <span>Approve / Decline PSP</span>

            <img alt="" src="@Url.Content( "~/images/thumbs-down.png" )" style="margin-bottom: 2px; margin-left: 5px;" />
        </h2>

        @Html.ValidationSummary( true )

        @Html.HiddenFor( model => model.Id )

        <div id="item-details" class="item-details" style="width: auto;">

            <div class="left" style="width: 30%; margin-right: 4%;">

                <div class="display-field" style="text-align: center;">

                    <img style="margin-bottom: 10px; display: inline-block; width: 50%; border-top-left-radius: 6px; border-bottom-right-radius: 6px; padding: 8px;" alt="Logo" src="@logoUrl" />

                    <strong class="block uppercase">@Html.DisplayFor( model => model.CompanyName )</strong>
                </div>

                <div class="display-label">
                    Trading As
                </div>
                <div class="display-field">
                    @Html.DisplayFor( model => model.TradingAs )
                </div>

                <div class="display-label">
                    Company Registration Number
                </div>
                <div class="display-field">
                    @Html.DisplayFor( model => model.CompanyRegistrationNumber )
                </div>

                <div class="display-label">
                    Description
                </div>
                <div class="display-field">
                    @Html.DisplayFor( model => model.Description )
                </div>

                <div class="display-label">
                    Service Required
                </div>
                <div class="display-field">
                    @( ( ( ServiceType ) Model.ServiceType ).GetDisplayText() )
                </div>

                <div class="display-label">
                    Type of Pallet Use
                </div>
                <div class="display-field">
                    @( ( ( TypeOfPalletUse ) Model.TypeOfPalletUse ).GetDisplayText() )

                    @if ( ( ( TypeOfPalletUse ) Model.TypeOfPalletUse ) == TypeOfPalletUse.Other && !string.IsNullOrEmpty( Model.OtherTypeOfPalletUse ) )
                    {
                        <i class="block bold" style="border-top: 1px solid #ddd; padding-top: 5px;">
                            @Model.OtherTypeOfPalletUse
                        </i>
                    }
                </div>

                <div class="display-label">
                    Company Type
                </div>
                <div class="display-field">
                    @( ( ( CompanyType ) Model.CompanyType ).GetDisplayText() )
                </div>

            </div>

            <div class="left" style="width: 30%; margin-right: 4%;">

                <div class="display-label">
                    VAT Number
                </div>
                <div class="display-field">
                    @Html.DisplayFor( model => model.VATNumber )
                </div>

                <div class="display-label">
                    BBBEE Level
                </div>
                <div class="display-field">
                    @Html.DisplayFor( model => model.BBBEELevel )
                </div>

                <div class="display-label">
                    Contact Person
                </div>
                <div class="display-field">
                    @Html.DisplayFor( model => model.ContactPerson )
                </div>

                <div class="display-label">
                    Contact Number
                </div>
                <div class="display-field">
                    @Html.DisplayFor( model => model.ContactNumber )
                </div>

                <div class="display-label">
                    Contact Email
                </div>
                <div class="display-field">
                    @Html.DisplayFor( model => model.EmailAddress )
                </div>

                <div class="display-label">
                    Administrator
                </div>
                <div class="display-field">
                    @Html.DisplayFor( model => model.AdminPerson )
                </div>

                <div class="display-label">
                    Administrator Email
                </div>
                <div class="display-field">
                    @Html.DisplayFor( model => model.AdminEmail )
                </div>

                <div class="display-label">
                    Financial Person
                </div>
                <div class="display-field">
                    @Html.DisplayFor( model => model.FinancialPerson )
                </div>

                <div class="display-label">
                    Financial Email
                </div>
                <div class="display-field">
                    @Html.DisplayFor( model => model.FinPersonEmail )
                </div>

            </div>

            <div class="left" style="width: 30%;">

                <div class="display-label">
                    Uploaded Documents
                </div>

                @if ( Model.Files.NullableAny( d => d.Name?.ToLower() != "logo" ) )
                {
                    ViewBag.DisplayOnly = true;

                    <div id="psp-documents">

                        @Html.Partial( "_PSPDocuments", Model.Files )

                    </div>
                }

                <div class="clear" style="border-bottom: 1px dashed #ccc; margin-bottom: 20px; height: 0;">&nbsp;</div>

                @if ( Model.Address != null )
                {
                    <div class="grouped-area">

                        <p>
                            <strong class="uppercase">Addres Details</strong>
                        </p>

                        <div class="display-label">
                            Addres
                        </div>
                        <div class="display-field">
                            @Model.Address.AddressLine1
                        </div>
                        <div class="display-field">
                            @Model.Address.AddressLine2
                        </div>

                        <div class="display-label">
                            Town/City
                        </div>
                        <div class="display-field">
                            @Model.Address.Town
                        </div>

                        <div class="display-label">
                            Postal Code
                        </div>
                        <div class="display-field">
                            @Model.Address.PostCode
                        </div>

                        <div class="display-label">
                            Province
                        </div>
                        <div class="display-field">
                            @(Model?.Address?.Province?.Description)
                        </div>

                    </div>
                }
                else
                {
                    <div class="message-warn">
                        No address details found.
                    </div>
                }

            </div>

            <div class="clear" style="border-bottom: 1px dashed #ccc; margin-bottom: 20px; height: 0;">&nbsp;</div>

            <div class="display-label" style="margin-bottom: 10px;">

                <p>
                    <strong class="uppercase">Budgets (@Model.PSPBudgets.NullableCount())</strong>
                </p>

            </div>

            <table id="PSPBudget-table" class="da-table" style="border-bottom: 0;">

                <thead>
                    <tr>
                        <td>#</td>
                        <th>Year</th>
                        <th><b>Total</b></th>
                        <th>Jan</th>
                        <th>Feb</th>
                        <th>Mar</th>
                        <th>Apr</th>
                        <th>May</th>
                        <th>Jun</th>
                        <th>Jul</th>
                        <th>Aug</th>
                        <th>Sep</th>
                        <th>Oct</th>
                        <th>Nov</th>
                        <th>Dec</th>
                    </tr>
                </thead>

                <tbody>
                    @if ( Model.PSPBudgets.NullableAny() )
                    {
                        int count = 0;

                        foreach ( PSPBudget b in Model.PSPBudgets )
                        {
                            decimal? total = b.Total > 0 ? b.Total : b.January + b.February + b.March + b.April + b.May + b.June + b.July + b.August + b.September + b.October + b.November + b.December;

                            <tr>
                                <td width="1%">
                                    @(count + 1)
                                </td>
                                <td>
                                    @b.BudgetYear
                                    <input name="PSPBudgets[@count].BudgetYear" type="hidden" value="@b.BudgetYear" >
                                </td>
                                <td>
                                    <b>@Math.Round( total ?? 0, 0 )</b>
                                    <input name="PSPBudgets[@count].Total" type="hidden" value="@total">
                                </td>
                                <td>
                                    @b.January
                                    <input name="PSPBudgets[@count].January" type="hidden" value="@b.January">
                                </td>
                                <td>
                                    @b.February
                                    <input name="PSPBudgets[@count].February" type="hidden" value="@b.February">
                                </td>
                                <td>
                                    @b.March
                                    <input name="PSPBudgets[@count].March" type="hidden" value="@b.March">
                                </td>
                                <td>
                                    @b.April
                                    <input name="PSPBudgets[@count].April" type="hidden" value="@b.April">
                                </td>
                                <td>
                                    @b.May
                                    <input name="PSPBudgets[@count].May" type="hidden" value="@b.May">
                                </td>
                                <td>
                                    @b.June
                                    <input name="PSPBudgets[@count].June" type="hidden" value="@b.June">
                                </td>
                                <td>
                                    @b.July
                                    <input name="PSPBudgets[@count].July" type="hidden" value="@b.July">
                                </td>
                                <td>
                                    @b.August
                                    <input name="PSPBudgets[@count].August" type="hidden" value="@b.August">
                                </td>
                                <td>
                                    @b.September
                                    <input name="PSPBudgets[@count].September" type="hidden" value="@b.September">
                                </td>
                                <td>
                                    @b.October
                                    <input name="PSPBudgets[@count].October" type="hidden" value="@b.October">
                                </td>
                                <td>
                                    @b.November
                                    <input name="PSPBudgets[@count].November" type="hidden" value="@b.November">
                                </td>
                                <td>
                                    @b.December
                                    <input name="PSPBudgets[@count].December" type="hidden" value="@b.December">
                                </td>
                            </tr>

                            count++;
                        }
                    }
                </tbody>

            </table>

            <div class="clear" style="border-bottom: 1px dashed #ccc; margin-bottom: 20px;">&nbsp;</div>

            <div style="width: 32%; margin-top: 20px;">

                <div class="display-label">
                    Number Of Pallets Lost
                </div>
                <div class="display-field">
                    @Model.NumberOfLostPallets
                </div>

            </div>

            <div class="grouped-area">

                <div class="left" style="width: 48%; margin-right: 4%;">

                    <div class="editor-label">
                        @Html.LabelFor( model => model.Status )
                    </div>
                    <div class="editor-field">
                        <select id="ApproveDeclinePSPClientStatus" name="Status" data-approve-decline-psp="1" data-active-target="#user-details" data-rejected-target="#decline-reason-details" class="chzn" style="width: 100%;">
                            <option value="">-- Select</option>

                            @foreach ( int item in Enum.GetValues( typeof( PSPClientStatus ) ) )
                            {
                                PSPClientStatus status = ( PSPClientStatus ) item;

                                if ( status != PSPClientStatus.Rejected && status != PSPClientStatus.Verified )
                                {
                                    continue;
                                }

                                <option value="@item">@status.GetDisplayText()</option>
                            }
                        </select>

                        @Html.ValidationMessageFor( model => model.Status )
                    </div>

                </div>

                <div class="left" style="width: 48%;">

                    <div id="user-details" class="none">

                        <p>
                            <strong class="uppercase" style="color: #002e70 !important;">SUPPLY USER LOGIN DETAILS</strong>
                        </p>

                        @Html.HiddenFor( model => model.User.Id )
                        @Html.HiddenFor( model => model.User.Status )
                        @Html.HiddenFor( model => model.User.RoleId )

                        <div class="edit-label">
                            @Html.LabelFor( model => model.User.Name )
                        </div>
                        <div class="edit-field">
                            @Html.TextBoxFor( model => model.User.Name, new { @placeholder = "Enter First Name" } )
                            @Html.ValidationMessageFor( model => model.User.Name )
                        </div>

                        <div class="edit-label">
                            @Html.LabelFor( model => model.User.Surname )
                        </div>
                        <div class="edit-field">
                            @Html.TextBoxFor( model => model.User.Surname, new { @placeholder = "Enter Surname" } )
                            @Html.ValidationMessageFor( model => model.User.Surname )
                        </div>

                        <div class="edit-label">
                            @Html.LabelFor( model => model.User.Email )
                        </div>
                        <div class="edit-field">
                            @Html.TextBoxFor( model => model.User.Email, new { @placeholder = "Enter Email Address" } )
                            @Html.ValidationMessageFor( model => model.User.Email )
                        </div>

                        <div class="edit-label">
                            @Html.LabelFor( model => model.User.Cell )
                        </div>
                        <div class="edit-field">
                            @Html.TextBoxFor( model => model.User.Cell, new { @placeholder = "Enter Cell Number" } )
                            @Html.ValidationMessageFor( model => model.User.Cell )
                        </div>

                        <div class="clear" style="border-bottom: 1px dashed #ccc; margin-bottom: 20px; height: 0;">&nbsp;</div>

                        <div class="edit-label">
                            @Html.LabelFor( model => model.User.Password )
                        </div>
                        <div class="edit-field">
                            @Html.PasswordFor( model => model.User.Password, new { @placeholder = "Enter Password" } )
                            @Html.ValidationMessageFor( model => model.User.Password )
                        </div>

                        <div class="edit-label">
                            @Html.LabelFor( model => model.User.ConfirmPassword )
                        </div>
                        <div class="edit-field">
                            @Html.PasswordFor( model => model.User.ConfirmPassword, new { @placeholder = "Confirm Password" } )
                            @Html.ValidationMessageFor( model => model.User.ConfirmPassword )
                        </div>

                    </div>

                    <div id="decline-reason-details" class="none">

                        <div class="editor-label">
                            @Html.LabelFor( model => model.DeclineReason )
                        </div>

                        <div class="editor-field">
                            <select id="DeclineReason" name="DeclineReason" class="chzn" style="width: 100%;">
                                <option value="">-- Select</option>

                                @foreach ( string item in Model.DeclineReasonOptions )
                                {
                                    <option value="@item">@item</option>
                                }
                            </select>
                            @Html.ValidationMessageFor( model => model.DeclineReason )
                        </div>

                    </div>

                </div>

                <div class="clear"></div>

            </div>

            <div class="grouped-area">

                <input id="save-btn" type="submit" value="Save" />

                <span style="padding: 0 5px;">/</span>

                <a data-cancel="1" data-target="#edit-item" data-remove="tr.edit">Cancel</a>

            </div>

        </div>

    </div>
}
