@model PagingExtension

@using ACT.Data.Models;
@using ACT.Core.Enums;
@using ACT.Core.Models;

@{
    ViewBag.ShowExport = true;
    ViewBag.ShowCustom = true;
    ViewBag.ShowQuickStructure = true;

    ViewBag.ViewName = "_ManageTransporters";

    UserModel user = User.Get();
}


@Html.Partial( "_Notification" )


@{
    Int32 count = Model.Start;
    List<Transporter> items = (List<Transporter>)Model.Items;
}


@if ( Model == null || !items.Any() )
{
    <div class="notification message-warn" style="margin-bottom: 20px;">
        There are no Transporters available matching your search criteria.
    </div>
}

<p>
    @Html.ActionLink( "Add Transporter", "AddTransporter", new { }, new { @class = "add", @rel = "tipsyS", @title = "Add a new transporter?", @data_edit = "1", @data_id = 0, @data_target = "#managetransporters" } )
    <span class="loader"></span>
</p>


<table id="transporters-table" class="da-table datatable-numberpaging sort fixed-header" data-fixed-header-target="#transporters-table_wrapper" data-starting-point=".ap-tabs ul">
    <thead>
        <tr>
            @*<th data-name="Count">
                #
            </th>*@
            <th data-name="Name" data-column="Name">
                Transporter Reg Name
            </th>
            <th data-name="Cell" data-column="Cell">
                Trading Name
            </th>
            <th data-name="Status" data-column="Status">
                Registration Number
            </th>
            <th data-name="Type" data-column="Type">
                Company Contact Number
            </th>
            <th data-name="LastLogin" data-column="LastLogin">
                Email
            </th>
            <th data-name="Actions">
                Actions
            </th>
        </tr>
    </thead>

    <tbody>
        @if (Model != null && items != null && items.Count() > 0)
        {
            foreach (var item in items)
            {
                Status status = (Status)item.Status;

                String active = status.Equals(Status.Active) ? "active" : "inactive";
                String enable = status.Equals(Status.Active) ? "Disable" : "Enable";

                <tr id="tr-@item.Id-item" class="tr-@item.Id-item">
                    <td style="width: 15%;">
                        @item.Name
                    </td>
                    <td>
                        @item.TradingName
                    </td>
                    <td>
                        @item.RegistrationNumber
                    </td>
                    <td>
                        @item.ContactNumber
                    </td>
                    <td>
                        @item.Email
                    </td>                    

                    <td width="15%">
                        @Html.ActionLink("Details", "TransporterDetails", new { id = item.Id }, new { @class = "info", @data_details = "1", @data_id = item.Id, @data_target = ".tr-" + item.Id + "-item" })

                        @Html.ActionLink("Edit", "EditTransporter", new { id = item.Id, returnView = "ManageTransporters" }, new { @class = "edit", @data_edit = "1", @data_id = item.Id, @data_target = ".tr-" + item.Id + "-item" })

                        @Html.ActionLink(enable, "DeleteTransporter", new { id = item.Id }, new { @class = "warn", @data_delete = "1", @data_id = item.Id, @data_target = "#tr-" + item.Id + "-item", @data_refresh_target = "#managetransporters", @rel = "tipsyE", @title = enable + " this item?" })
                        <a href="#" onclick="ContactsModal('@item.Id')"><i class="fa fa-phone"></i>Contacts</a>
                        <a href="#" onclick="VehiclesModal('@item.Id')"><i class="fa fa-truck"></i>Vehicles</a>
                    </td>


                </tr>

                count++;
            }
        }
    </tbody>

</table>

@*@Html.Partial( "_UserCustomSearch", new ACT.Core.Models.CustomSearchModel( "User" ) )*@

@Html.Partial( "_Paging" )