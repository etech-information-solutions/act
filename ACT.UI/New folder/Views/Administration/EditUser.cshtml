@model UserViewModel

@using ACT.UI.Models;
@using ACT.Core.Enums;
@using ACT.Core.Models;

@{
    if ( ViewBag.IncludeLayout == null )
    {
        Layout = null;
    }

    ViewBag.Title = "Edit";

    UserModel user = User.Get();

    int pspRoleId = Model.RoleOptions.FirstOrDefault( r => r.Type == ( int ) RoleType.PSP )?.Id ?? 0,
        clientRoleId = Model.RoleOptions.FirstOrDefault( r => r.Type == ( int ) RoleType.Client )?.Id ?? 0;

    string disableRole = ( user.RoleType == RoleType.PSP || user.RoleType == RoleType.Client ) ? "1" : "0";

    if ( user.RoleType == RoleType.PSP )
    {
        Model.RoleId = Model.RoleOptions.FirstOrDefault( r => r.Type == ( int ) RoleType.PSP )?.Id ?? 0;
    }
    else if ( user.RoleType == RoleType.Client )
    {
        Model.RoleId = Model.RoleOptions.FirstOrDefault( r => r.Type == ( int ) RoleType.Client )?.Id ?? 0;
    }
}


@Html.Partial( "_Notification" )

@using ( Html.BeginForm( "EditUser", "Administration", FormMethod.Post, new { enctype = "multipart/form-data", @data_ajax_form = "1", @data_target = "#manageusers", @class = "custom-validate", @style = "width: auto;" } ) )
{
    <div id="edit-item">

        <h2 class="uppercase" style="width: auto;">
            <img alt="" src="@Url.Content( "~/images/edit.png" )" />
            <span>Edit User</span>
        </h2>

        @Html.ValidationSummary( true )

        @Html.HiddenFor( model => model.Id )

        <div id="item-details" class="item-details" style="width: auto;">

            <div class="left" style="width: 46%; margin-right: 2%;">

                <div class="edit-label">
                    @Html.LabelFor( model => model.Name )
                </div>
                <div class="edit-field">
                    @Html.TextBoxFor( model => model.Name, new { @placeholder = "Enter First Name" } )
                    @Html.ValidationMessageFor( model => model.Name )
                </div>

                <div class="edit-label">
                    @Html.LabelFor( model => model.Surname )
                </div>
                <div class="edit-field">
                    @Html.TextBoxFor( model => model.Surname, new { @placeholder = "Enter Surname" } )
                    @Html.ValidationMessageFor( model => model.Surname )
                </div>

                <div class="edit-label">
                    @Html.LabelFor( model => model.Status )
                </div>
                <div class="edit-field">
                    @Html.EnumDropDownFor( model => model.Status, false, new { @class = "chzn", @style = "width: 98%;" } )
                    @Html.ValidationMessageFor( model => model.Status )
                </div>

                <div class="edit-label">
                    @Html.LabelFor( model => model.Cell )
                </div>
                <div class="edit-field">
                    @Html.TextBoxFor( model => model.Cell, new { @placeholder = "Enter Cell Number" } )
                    @Html.ValidationMessageFor( model => model.Cell )
                </div>

                <div class="edit-label">
                    @Html.LabelFor( model => model.RoleId )
                </div>
                <div class="edit-field">
                    @Html.DropDownListFor( model => model.RoleId, model => Model.RoleOptions, role => role.Id, role => role.Name + " (user)", true, new { @class = "chzn", data_always_disabled = disableRole, data_role = "1", data_psp = "#psp-options", data_psp_role_id = pspRoleId, data_client_role_id = clientRoleId, data_client = "#client-options", @style = "width: 98%;" } )
                    @Html.ValidationMessageFor( model => model.RoleId )
                </div>

                <div id="psp-options" class="grouped-area @(Model.RoleType == RoleType.PSP ? "block" : "none")" style="margin-bottom: 20px;">
                    <div class="editor-label">
                        @Html.LabelFor( model => model.PSPId )
                    </div>
                    <div class="editor-field">
                        @Html.DropDownListFor( model => model.PSPId, model => model.PSPOptions, p => p.Key, p => p.Value, true, new { @class = "chzn", @style = "width: 98%;" } )
                    </div>
                </div>

                <div id="client-options" class="grouped-area @(Model.RoleType == RoleType.Client ? "block" : "none")" style="margin-bottom: 20px;">
                    <div class="editor-label">
                        @Html.LabelFor( model => model.ClientId )
                    </div>
                    <div class="editor-field">
                        @Html.DropDownListFor( model => model.ClientId, model => model.ClientOptions, c => c.Key, c => c.Value, true, new { @class = "chzn", @style = "width: 98%;" } )
                    </div>
                </div>

            </div>

            <div class="grouped-area left" style="width: 46%;">

                <p>
                    <strong class="uppercase" style="color: #002e70 !important;">LOGIN DETAILS</strong>
                </p>

                <div class="edit-label">
                    @Html.LabelFor( model => model.Email )
                </div>
                <div class="edit-field">
                    @Html.TextBoxFor( model => model.Email, new { @placeholder = "Enter Email Address" } )
                    @Html.ValidationMessageFor( model => model.Email )
                </div>

                <div class="edit-label">
                    @Html.LabelFor( model => model.Password )
                </div>
                <div class="edit-field">
                    @Html.PasswordFor( model => model.Password, new { @placeholder = "Enter Password" } )
                    @Html.ValidationMessageFor( model => model.Password )
                </div>

                <div class="edit-label">
                    @Html.LabelFor( model => model.ConfirmPassword )
                </div>
                <div class="edit-field">
                    @Html.PasswordFor( model => model.ConfirmPassword, new { @placeholder = "Confirm Password" } )
                    @Html.ValidationMessageFor( model => model.ConfirmPassword )
                </div>

            </div>

            <div class="clear" style="border-bottom: 1px dashed #ccc; margin-bottom: 20px;">&nbsp;</div>

            <p>
                <input id="save-btn" type="submit" value="Save" />

                <span style="padding: 0 5px;">/</span>

                <a data-cancel="1" data-target="#edit-item" data-remove="tr.edit">Cancel</a>
            </p>

        </div>

    </div>
}