@model PSPViewModel

@using ACT.UI.Models;
@using ACT.Core.Enums;


@Html.Partial( "_Notification" )

@using ( Html.BeginForm( "ApproveDeclinePSP", "Administration", FormMethod.Post, new { enctype = "multipart/form-data", @data_ajax_form = "1", @data_target = "#psps", @class = "custom-validate", @style = "width: auto;" } ) )
{
    <div id="edit-item">

        <h2 class="uppercase" style="width: auto; margin-top: 10px;">
            <img alt="" src="@Url.Content( "~/images/thumbs-up.png" )" style="margin-bottom: 2px; margin-right: 5px;" />

            <span>Approve / Decline PSP</span>

            <img alt="" src="@Url.Content( "~/images/thumbs-down.png" )" style="margin-bottom: 2px; margin-left: 5px;" />
        </h2>

        @Html.ValidationSummary( true )

        @Html.HiddenFor( model => model.Id )

        <div id="item-details" class="item-details" style="width: auto;">

            <div class="left" style="width: 48%; margin-right: 4%;">

                <div class="display-label">
                    Company Name
                </div>
                <div class="display-field">
                    @Html.DisplayFor( model => model.CompanyName )
                    @Html.HiddenFor( model => model.CompanyName )
                </div>

                <div class="display-label">
                    Trading As
                </div>
                <div class="display-field">
                    @Html.DisplayFor( model => model.TradingAs )
                    @Html.HiddenFor( model => model.TradingAs )
                </div>

                <div class="display-label">
                    VAT Number
                </div>
                <div class="display-field">
                    @Html.DisplayFor( model => model.VATNumber )
                    @Html.HiddenFor( model => model.VATNumber )
                </div>

                <div class="display-label">
                    Company Registration Number
                </div>
                <div class="display-field">
                    @Html.DisplayFor( model => model.CompanyRegistrationNumber )
                    @Html.HiddenFor( model => model.CompanyRegistrationNumber )
                </div>

                <div class="display-label">
                    Company Registration File
                </div>
                <div class="display-field">
                    @if ( Model.RegistrationFile != null && Model.RegistrationFile.Id > 0 )
                    {
                        <a class="block" target="_blank" href="@Url.Action( "ViewDocument", "Administration", new { @id = Model.RegistrationFile.Id } )">
                            <img alt="download" src="@Url.Content( "~/Images/download.png" )" style="margin-bottom: 2px;" />

                            @Model.RegistrationFile.Name (@Model.RegistrationFile.Extension)
                        </a>
                    }
                    else
                    {
                        <div class="message-warn">
                            No file was uploaded
                        </div>
                    }
                </div>

                <div class="display-label">
                    Description
                </div>
                <div class="display-field">
                    @Html.DisplayFor( model => model.Description )
                    @Html.HiddenFor( model => model.Description )
                </div>

            </div>

            <div class="left" style="width: 48%;">

                <div class="display-label">
                    Contact Person
                </div>
                <div class="display-field">
                    @Html.DisplayFor( model => model.ContactPerson )
                    @Html.HiddenFor( model => model.ContactPerson )
                </div>

                <div class="display-label">
                    Contact Number
                </div>
                <div class="display-field">
                    @Html.DisplayFor( model => model.ContactNumber )
                    @Html.HiddenFor( model => model.ContactNumber )
                </div>

                <div class="display-label">
                    Email Address
                </div>
                <div class="display-field">
                    @Html.DisplayFor( model => model.EmailAddress )
                    @Html.HiddenFor( model => model.EmailAddress )
                </div>

                <div class="display-label">
                    Admin Email Address
                </div>
                <div class="display-field">
                    @Html.DisplayFor( model => model.AdminEmail )
                    @Html.HiddenFor( model => model.AdminEmail )
                </div>

                <div class="display-label">
                    Service Required
                </div>
                <div class="display-field">
                    @Model.ServiceType.GetDisplayText()
                    @Html.HiddenFor( model => model.ServiceType )
                </div>

            </div>

            <div class="clear" style="border-bottom: 1px dashed #ccc; margin-bottom: 20px; height: 0;">&nbsp;</div>

            <div class="display-label">
                Estimated Load Per Month
            </div>

            <table id="PSPBudget-table" class="da-table" style="border-bottom: 0;">

                <thead>
                    <tr>
                        <th>Jan</th>
                        <th>Feb</th>
                        <th>Mar</th>
                        <th>Apr</th>
                        <th>May</th>
                        <th>Jun</th>
                        <th>Jul</th>
                        <th>Aug</th>
                        <th>Sep</th>
                        <th>Oct</th>
                        <th>Nov</th>
                        <th>Dec</th>
                    </tr>
                </thead>

                <tbody>
                    <tr>
                        <td>
                            @Model.PSPBudget.January
                            @Html.HiddenFor( model => model.PSPBudget.January )
                        </td>
                        <td>
                            @Model.PSPBudget.February
                            @Html.HiddenFor( model => model.PSPBudget.February )
                        </td>
                        <td>
                            @Model.PSPBudget.March
                            @Html.HiddenFor( model => model.PSPBudget.March )
                        </td>
                        <td>
                            @Model.PSPBudget.April
                            @Html.HiddenFor( model => model.PSPBudget.April )
                        </td>
                        <td>
                            @Model.PSPBudget.May
                            @Html.HiddenFor( model => model.PSPBudget.May )
                        </td>
                        <td>
                            @Model.PSPBudget.June
                            @Html.HiddenFor( model => model.PSPBudget.June )
                        </td>
                        <td>
                            @Model.PSPBudget.July
                            @Html.HiddenFor( model => model.PSPBudget.July )
                        </td>
                        <td>
                            @Model.PSPBudget.August
                            @Html.HiddenFor( model => model.PSPBudget.August )
                        </td>
                        <td>
                            @Model.PSPBudget.September
                            @Html.HiddenFor( model => model.PSPBudget.September )
                        </td>
                        <td>
                            @Model.PSPBudget.October
                            @Html.HiddenFor( model => model.PSPBudget.October )
                        </td>
                        <td>
                            @Model.PSPBudget.November
                            @Html.HiddenFor( model => model.PSPBudget.November )
                        </td>
                        <td>
                            @Model.PSPBudget.December
                            @Html.HiddenFor( model => model.PSPBudget.December )
                        </td>
                    </tr>
                </tbody>

            </table>

            <div class="clear" style="border-bottom: 1px dashed #ccc; margin-bottom: 20px;">&nbsp;</div>

            @if ( Model.Address != null )
            {
                <div class="left" style="width: 48%; margin-right: 4%;">

                    <div class="display-label">
                        Address Line 1
                    </div>
                    <div class="display-field">
                        @Model.Address.AddressLine1
                        @Html.HiddenFor( model => model.Address.AddressLine1 )
                    </div>

                    <div class="display-label">
                        Town
                    </div>
                    <div class="display-field">
                        @Model.Address.Town
                        @Html.HiddenFor( model => model.Address.Town )
                    </div>

                    <div class="display-label">
                        Postal Code
                    </div>
                    <div class="display-field">
                        @Model.Address.PostCode
                        @Html.HiddenFor( model => model.Address.PostCode )
                    </div>

                </div>

                <div class="left" style="width: 48%;">

                    <div class="display-label">
                        Address Line 2
                    </div>
                    <div class="display-field">
                        @Model.Address.AddressLine2
                        @Html.HiddenFor( model => model.Address.AddressLine2 )
                    </div>

                    <div class="display-label">
                        Province
                    </div>
                    <div class="display-field">
                        @Model.Address.Province.GetDisplayText()
                        @Html.HiddenFor( model => model.Address.Province )
                    </div>

                </div>
            }
            else
            {
                <div class="message-warn">
                    No address details found. Please edit and add address details.
                </div>
            }

            <div class="clear"></div>

            <div class="grouped-area">

                <div class="left" style="width: 48%; margin-right: 4%;">

                    <div class="editor-label">
                        @Html.LabelFor( model => model.Status )
                    </div>
                    <div class="editor-field">
                        <select id="ApproveDeclinePSPClientStatus" name="Status" data-approve-decline-psp="1" data-active-target="#user-details" data-rejected-target="#decline-reason-details" class="chzn" style="width: 100%;">
                            <option value="">-- Select</option>

                            @foreach ( int item in Enum.GetValues( typeof( PSPClientStatus ) ) )
                            {
                                PSPClientStatus status = ( PSPClientStatus ) item;

                                if ( status != PSPClientStatus.Rejected && status != PSPClientStatus.Verified )
                                {
                                    continue;
                                }

                                <option value="@item">@status.GetDisplayText()</option>
                            }
                        </select>
                        @Html.ValidationMessageFor( model => model.Status )
                    </div>

                </div>

                <div class="left" style="width: 48%;">

                    <div id="user-details" class="none">

                        <p>
                            <strong class="uppercase" style="color: #002e70 !important;">SUPPLY USER LOGIN DETAILS</strong>
                        </p>

                        @Html.HiddenFor( model => model.User.Id )
                        @Html.HiddenFor( model => model.User.Status )
                        @Html.HiddenFor( model => model.User.RoleId )

                        <div class="edit-label">
                            @Html.LabelFor( model => model.User.Name )
                        </div>
                        <div class="edit-field">
                            @Html.TextBoxFor( model => model.User.Name, new { @placeholder = "Enter First Name" } )
                            @Html.ValidationMessageFor( model => model.User.Name )
                        </div>

                        <div class="edit-label">
                            @Html.LabelFor( model => model.User.Surname )
                        </div>
                        <div class="edit-field">
                            @Html.TextBoxFor( model => model.User.Surname, new { @placeholder = "Enter Surname" } )
                            @Html.ValidationMessageFor( model => model.User.Surname )
                        </div>

                        <div class="edit-label">
                            @Html.LabelFor( model => model.User.Email )
                        </div>
                        <div class="edit-field">
                            @Html.TextBoxFor( model => model.User.Email, new { @placeholder = "Enter Email Address" } )
                            @Html.ValidationMessageFor( model => model.User.Email )
                        </div>

                        <div class="edit-label">
                            @Html.LabelFor( model => model.User.Cell )
                        </div>
                        <div class="edit-field">
                            @Html.TextBoxFor( model => model.User.Cell, new { @placeholder = "Enter Cell Number" } )
                            @Html.ValidationMessageFor( model => model.User.Cell )
                        </div>

                        <div class="clear" style="border-bottom: 1px dashed #ccc; margin-bottom: 20px; height: 0;">&nbsp;</div>

                        <div class="edit-label">
                            @Html.LabelFor( model => model.User.Password )
                        </div>
                        <div class="edit-field">
                            @Html.PasswordFor( model => model.User.Password, new { @placeholder = "Enter Password" } )
                            @Html.ValidationMessageFor( model => model.User.Password )
                        </div>

                        <div class="edit-label">
                            @Html.LabelFor( model => model.User.ConfirmPassword )
                        </div>
                        <div class="edit-field">
                            @Html.PasswordFor( model => model.User.ConfirmPassword, new { @placeholder = "Confirm Password" } )
                            @Html.ValidationMessageFor( model => model.User.ConfirmPassword )
                        </div>

                    </div>

                    <div id="decline-reason-details" class="none">

                        <div class="editor-label">
                            @Html.LabelFor( model => model.DeclineReason )
                        </div>

                        <div class="editor-field">
                            <select id="DeclineReason" name="DeclineReason" class="chzn" style="width: 100%;">
                                <option value="">-- Select</option>

                                @foreach ( string item in Model.DeclineReasonOptions )
                                {
                                    <option value="@item">@item</option>
                                }
                            </select>
                            @Html.ValidationMessageFor( model => model.DeclineReason )
                        </div>

                    </div>

                </div>

                <div class="clear"></div>

            </div>

            <div class="grouped-area">

                <input id="save-btn" type="submit" value="Save" />

                <span style="padding: 0 5px;">/</span>

                <a data-cancel="1" data-target="#edit-item" data-remove="tr.edit">Cancel</a>

            </div>

        </div>

    </div>
}
